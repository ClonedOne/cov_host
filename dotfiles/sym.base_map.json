{
  "0x0804b1e4": "; CODE XREF from sym.base (0x804b1d6)\n0x0804b1e4      sub esp, 8\n0x0804b1e7      push dword [arg_ch]\n0x0804b1ea      push dword [arg_8h]\n0x0804b1ed      call sym.next_token\n0x0804b1f2      add esp, 0x10\n0x0804b1f5      jmp 0x804b225\n", 
  "0x0804af4c": "; CODE XREF from sym.base (0x804af23)\n0x0804af4c      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804af4f      add eax, 0x78                                          ; 'x'\n0x0804af52      mov edx, dword [eax]\n0x0804af54      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804af57      add eax, 0x78                                          ; 'x'\n0x0804af5a      mov eax, dword [eax]\n0x0804af5c      cmp eax, 0x4c764455                                    ; 'UDvL'\n0x0804af61      sete al\n0x0804af64      movzx eax, al\n0x0804af67      imul eax, edx\n0x0804af6a      shl eax, 5\n0x0804af6d      mov edx, eax\n0x0804af6f      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804af72      add eax, edx\n0x0804af74      sub esp, 8\n0x0804af77      push eax\n0x0804af78      push dword [arg_8h]\n0x0804af7b      call sym.next_token\n0x0804af80      add esp, 0x10\n0x0804af83      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804af86      add eax, 0xa0\n0x0804af8b      mov edx, dword [eax]\n0x0804af8d      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804af90      add eax, 0xa4\n0x0804af95      mov eax, dword [eax]\n0x0804af97      add edx, eax\n0x0804af99      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804af9c      add eax, 0xa8\n0x0804afa1      mov eax, dword [eax]\n0x0804afa3      imul eax, edx\n0x0804afa6      cmp eax, 0x289dd4b0\n0x0804afab      jne 0x804afd4\n", 
  "0x0804af16": "; CODE XREF from sym.base (0x804b044)\n0x0804af16      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804af19      add eax, 0x78                                          ; 'x'\n0x0804af1c      mov eax, dword [eax]\n0x0804af1e      cmp eax, 0x4c764455                                    ; 'UDvL'\n0x0804af23      jne 0x804af4c\n", 
  "0x0804ac99": "0x0804ac99      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ac9c      mov edx, dword [eax + 0x14]                            ; [0x14:4]=-1 ; 20\n0x0804ac9f      mov eax, dword [var_14h]\n0x0804aca2      mov dword [eax + 0x10], edx\n", 
  "0x0804aca5": "; CODE XREF from sym.base (0x804ac97)\n0x0804aca5      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aca8      add eax, 0x7c                                          ; '|'\n0x0804acab      mov eax, dword [eax]\n0x0804acad      cmp eax, 0x67705268                                    ; 'hRpg'\n0x0804acb2      jne 0x804acdb\n", 
  "0x0804af0a": "; CODE XREF from sym.base (0x804aef9)\n0x0804af0a      mov dword [var_10h], 0\n0x0804af11      jmp 0x804b03e\n", 
  "0x0804acb4": "0x0804acb4      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804acb9      sub esp, 0xc\n0x0804acbc      push 0xc8c                                             ; 3212\n0x0804acc1      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804acc6      push 0xb34a\n0x0804accb      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804acd0      push eax                                               ; FILE *stream\n0x0804acd1      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804acd6      add esp, 0x20\n0x0804acd9      test eax, eax\n", 
  "0x0804adf0": "0x0804adf0      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804adf5      sub esp, 0xc\n0x0804adf8      push 0xc96                                             ; 3222\n0x0804adfd      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804ae02      push 0xd22f\n0x0804ae07      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804ae0c      push eax                                               ; FILE *stream\n0x0804ae0d      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804ae12      add esp, 0x20\n0x0804ae15      test eax, eax\n", 
  "0x0804a977": "(fcn) sym.base 2230\n  sym.base (int32_t arg_8h, uint32_t arg_ch);\n; var int32_t var_14h @ ebp-0x14\n; var uint32_t var_10h @ ebp-0x10\n; var signed int var_ch @ ebp-0xc\n; var int32_t var_4h @ ebp-0x4\n; arg int32_t arg_8h @ ebp+0x8\n; arg uint32_t arg_ch @ ebp+0xc\n; CALL XREFS from sym.power (0x804b427, 0x804b4a2)\n0x0804a977      push ebp\n0x0804a978      mov ebp, esp\n0x0804a97a      push ebx\n0x0804a97b      sub esp, 0x14\n0x0804a97e      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804a981      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804a984      and eax, 0x1f\n0x0804a987      sub eax, 8\n0x0804a98a      cmp eax, 0x17                                          ; 23\n0x0804a98d      ja case.0x804a99a.16\n", 
  "0x0804abd0": "0x0804abd0      sub esp, 8\n0x0804abd3      push dword [arg_ch]\n0x0804abd6      push dword [arg_8h]\n0x0804abd9      call sym.next_token\n0x0804abde      add esp, 0x10\n0x0804abe1      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804abe4      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804abe7      cmp eax, 0x1d                                          ; 29\n0x0804abea      je 0x804abfb\n", 
  "0x0804add7": "; CODE XREF from sym.base (0x804adca)\n0x0804add7      mov eax, 0\n", 
  "0x0804ae6d": "0x0804ae6d      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ae70      mov ecx, dword [eax + 0x14]                            ; [0x14:4]=-1 ; 20\n0x0804ae73      mov eax, dword [var_14h]\n0x0804ae76      mov edx, dword [var_ch]\n0x0804ae79      mov dword [eax + edx*4 + 0xc], ecx\n", 
  "0x0804aa94": "0x0804aa94      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804aa99      sub esp, 0xc\n0x0804aa9c      push 0xc72                                             ; 3186\n0x0804aaa1      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804aaa6      push 0x2d7e                                            ; '~-'\n0x0804aaab      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804aab0      push eax                                               ; FILE *stream\n0x0804aab1      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804aab6      add esp, 0x20\n0x0804aab9      test eax, eax\n", 
  "0x0804ac20": "0x0804ac20      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804ac25      sub esp, 0xc\n0x0804ac28      push 0xc89                                             ; 3209\n0x0804ac2d      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804ac32      push 0xb07d\n0x0804ac37      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804ac3c      push eax                                               ; FILE *stream\n0x0804ac3d      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804ac42      add esp, 0x20\n0x0804ac45      test eax, eax\n", 
  "0x0804b0fb": "0x0804b0fb      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b100      sub esp, 0xc\n0x0804b103      push 0xcb0                                             ; 3248\n0x0804b108      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b10d      push 0xf6a9\n0x0804b112      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804b117      push eax                                               ; FILE *stream\n0x0804b118      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b11d      add esp, 0x20\n0x0804b120      test eax, eax\n", 
  "0x0804ab5f": "0x0804ab5f      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804ab64      sub esp, 0xc\n0x0804ab67      push 0xc7c                                             ; 3196\n0x0804ab6c      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804ab71      push 0xe81f\n0x0804ab76      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804ab7b      push eax                                               ; FILE *stream\n0x0804ab7c      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804ab81      add esp, 0x20\n0x0804ab84      test eax, eax\n", 
  "0x0804b058": "0x0804b058      mov eax, dword [var_ch]\n0x0804b05b      sub eax, 1\n0x0804b05e      cmp eax, dword [var_10h]\n0x0804b061      je 0x804b072\n", 
  "0x0804ad63": "; CODE XREF from sym.base (0x804ad3a)\n0x0804ad63      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad66      sub eax, 0xffffff80\n0x0804ad69      mov edx, dword [eax]\n0x0804ad6b      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad6e      add eax, 0x84\n0x0804ad73      mov eax, dword [eax]\n0x0804ad75      imul edx, eax\n0x0804ad78      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad7b      add eax, 0x88\n0x0804ad80      mov eax, dword [eax]\n0x0804ad82      sub edx, eax\n0x0804ad84      mov eax, edx\n0x0804ad86      cmp eax, 0x572a6c3a                                    ; ':l*W'\n0x0804ad8b      sete al\n0x0804ad8e      movzx edx, al\n0x0804ad91      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad94      add eax, 0x84\n0x0804ad99      mov eax, dword [eax]\n0x0804ad9b      mov ebx, edx\n0x0804ad9d      imul ebx, eax\n0x0804ada0      sub esp, 8\n0x0804ada3      push dword [arg_ch]\n0x0804ada6      push dword [arg_8h]\n0x0804ada9      call sym.power\n0x0804adae      add esp, 0x10\n0x0804adb1      mov edx, eax\n0x0804adb3      mov eax, dword [var_14h]\n0x0804adb6      mov dword [eax + ebx*4 + 0xc], edx\n0x0804adba      jmp 0x804b225\n", 
  "0x0804b04a": "0x0804b04a      jmp 0x804b04d\n", 
  "0x0804ad3c": "0x0804ad3c      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804ad41      sub esp, 0xc\n0x0804ad44      push 0xc8d                                             ; 3213\n0x0804ad49      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804ad4e      push 0xb546\n0x0804ad53      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804ad58      push eax                                               ; FILE *stream\n0x0804ad59      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804ad5e      add esp, 0x20\n0x0804ad61      test eax, eax\n", 
  "0x0804afad": "0x0804afad      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804afb2      sub esp, 0xc\n0x0804afb5      push 0xca1                                             ; 3233\n0x0804afba      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804afbf      push 0xd77c\n0x0804afc4      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804afc9      push eax                                               ; FILE *stream\n0x0804afca      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804afcf      add esp, 0x20\n0x0804afd2      test eax, eax\n", 
  "0x0804ab42": "0x0804ab42      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ab45      mov edx, dword [eax + 0x14]                            ; [0x14:4]=-1 ; 20\n0x0804ab48      mov eax, dword [var_14h]\n0x0804ab4b      mov dword [eax + 0xc], edx\n", 
  "0x0804afd4": "; CODE XREF from sym.base (0x804afab)\n0x0804afd4      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804afd7      add eax, 0xa0\n0x0804afdc      mov edx, dword [eax]\n0x0804afde      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804afe1      add eax, 0xa4\n0x0804afe6      mov eax, dword [eax]\n0x0804afe8      add edx, eax\n0x0804afea      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804afed      add eax, 0xa8\n0x0804aff2      mov eax, dword [eax]\n0x0804aff4      imul eax, edx\n0x0804aff7      cmp eax, 0x289dd4b0\n0x0804affc      sete al\n0x0804afff      movzx edx, al\n0x0804b002      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b005      add eax, 0xa4\n0x0804b00a      mov eax, dword [eax]\n0x0804b00c      imul edx, eax\n0x0804b00f      mov eax, dword [var_10h]\n0x0804b012      lea ebx, [edx + eax]\n0x0804b015      sub esp, 8\n0x0804b018      push dword [arg_ch]\n0x0804b01b      push dword [arg_8h]\n0x0804b01e      call sym.expr\n0x0804b023      add esp, 0x10\n0x0804b026      mov edx, eax\n0x0804b028      mov eax, dword [var_14h]\n0x0804b02b      mov dword [eax + ebx*4 + 0xc], edx\n0x0804b02f      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b032      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804b035      cmp eax, 0x1b                                          ; 27\n0x0804b038      jne 0x804b04c\n", 
  "0x0804a993": "0x0804a993      mov eax, dword case.0x804a99a.0                        ; [0x804d400:4]=0x804ab0f case.0x804a99a.8\n;-- switch.0x0804a99a:\n0x0804a99a      jmp eax                                                ; switch table (24 cases) at 0x804d400\n", 
  "0x0804b122": "; CODE XREF from sym.base (0x804b0f9)\n0x0804b122      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b125      add eax, 0xb4\n0x0804b12a      mov edx, dword [eax]\n0x0804b12c      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b12f      add eax, 0xb4\n0x0804b134      mov eax, dword [eax]\n0x0804b136      cmp eax, 0x69504b47                                    ; 'GKPi'\n0x0804b13b      sete al\n0x0804b13e      movzx eax, al\n0x0804b141      imul eax, edx\n0x0804b144      shl eax, 5\n0x0804b147      mov edx, eax\n0x0804b149      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b14c      add eax, edx\n0x0804b14e      sub esp, 8\n0x0804b151      push eax\n0x0804b152      push dword [arg_8h]\n0x0804b155      call sym.next_token\n0x0804b15a      add esp, 0x10\n0x0804b15d      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b160      add eax, 0x58                                          ; 'X'\n0x0804b163      mov eax, dword [eax]\n0x0804b165      cmp eax, 0x58504e72                                    ; 'rNPX'\n0x0804b16a      jne 0x804b193\n", 
  "0x0804aeb5": "; CODE XREF from sym.base (0x804ae8c)\n0x0804aeb5      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aeb8      add eax, 0x9c\n0x0804aebd      mov edx, dword [eax]\n0x0804aebf      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aec2      add eax, 0x9c\n0x0804aec7      mov eax, dword [eax]\n0x0804aec9      cmp eax, 0x67646962                                    ; 'bidg'\n0x0804aece      sete al\n0x0804aed1      movzx eax, al\n0x0804aed4      imul eax, edx\n0x0804aed7      shl eax, 5\n0x0804aeda      mov edx, eax\n0x0804aedc      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804aedf      add eax, edx\n0x0804aee1      sub esp, 8\n0x0804aee4      push eax\n0x0804aee5      push dword [arg_8h]\n0x0804aee8      call sym.next_token\n0x0804aeed      add esp, 0x10\n0x0804aef0      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804aef3      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804aef6      cmp eax, 0x1c                                          ; 28\n0x0804aef9      je 0x804af0a\n", 
  "0x0804ac47": "; CODE XREF from sym.base (0x804ac1e)\n0x0804ac47      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ac4a      add eax, 0x78                                          ; 'x'\n0x0804ac4d      mov edx, dword [eax]\n0x0804ac4f      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ac52      add eax, 0x78                                          ; 'x'\n0x0804ac55      mov eax, dword [eax]\n0x0804ac57      cmp eax, 0x594e6a65                                    ; 'ejNY'\n0x0804ac5c      sete al\n0x0804ac5f      movzx eax, al\n0x0804ac62      imul eax, edx\n0x0804ac65      mov edx, eax\n0x0804ac67      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ac6a      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804ac6d      sub esp, 4\n0x0804ac70      push edx\n0x0804ac71      push eax\n0x0804ac72      push dword [arg_8h]\n0x0804ac75      call sym.new_expr\n0x0804ac7a      add esp, 0x10\n0x0804ac7d      mov dword [var_14h], eax\n0x0804ac80      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ac83      mov edx, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804ac86      mov eax, dword [var_14h]\n0x0804ac89      mov dword [eax + 4], edx\n0x0804ac8c      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ac8f      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804ac92      and eax, 0x10\n0x0804ac95      test eax, eax\n0x0804ac97      je 0x804aca5\n", 
  "0x0804abec": "0x0804abec      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804abef      mov dword [eax + 8], 0x19                              ; [0x19:4]=-1 ; 25\n0x0804abf6      jmp 0x804b224\n", 
  "0x0804b1f7": ";-- cases 16...19 (0x804a99a):\n;-- case 21 (0x804a99a):\n;-- case.default.0x804b1f7:\n; CODE XREFS from sym.base (0x804a98d, 0x804a99a)\n0x0804b1f7      sub esp, 4\n0x0804b1fa      push 0\n0x0804b1fc      push 0\n0x0804b1fe      push dword [arg_8h]\n0x0804b201      call sym.new_expr\n0x0804b206      add esp, 0x10\n0x0804b209      mov dword [var_14h], eax\n0x0804b20c      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b20f      mov dword [eax + 8], 0x19                              ; [0x19:4]=-1 ; 25\n0x0804b216      mov eax, dword [var_14h]\n0x0804b219      fld qword [0x804d530]\n0x0804b21f      fstp qword [eax + 4]\n0x0804b222      jmp 0x804b225\n", 
  "0x0804ab86": "; CODE XREF from sym.base (0x804ab5d)\n0x0804ab86      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ab89      add eax, 0xb0\n0x0804ab8e      mov edx, dword [eax]\n0x0804ab90      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ab93      add eax, 0xb0\n0x0804ab98      mov eax, dword [eax]\n0x0804ab9a      cmp eax, 0x73584f66                                    ; 'fOXs'\n0x0804ab9f      sete al\n0x0804aba2      movzx eax, al\n0x0804aba5      imul eax, edx\n0x0804aba8      shl eax, 5\n0x0804abab      mov edx, eax\n0x0804abad      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804abb0      add eax, edx\n0x0804abb2      sub esp, 8\n0x0804abb5      push eax\n0x0804abb6      push dword [arg_8h]\n0x0804abb9      call sym.next_token\n0x0804abbe      add esp, 0x10\n0x0804abc1      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804abc4      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804abc7      cmp eax, 0x1c                                          ; 28\n0x0804abca      jne 0x804b224\n", 
  "0x0804b224": "; CODE XREFS from sym.base (0x804abca, 0x804abf6, 0x804ac0c)\n0x0804b224      nop\n", 
  "0x0804b04d": "; CODE XREF from sym.base (0x804b04a)\n0x0804b04d      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b050      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804b053      cmp eax, 0x1d                                          ; 29\n0x0804b056      jne 0x804b063\n", 
  "0x0804b0aa": "; CODE XREF from sym.base (0x804b081)\n0x0804b0aa      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b0ad      add eax, 0xac\n0x0804b0b2      mov edx, dword [eax]\n0x0804b0b4      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b0b7      add eax, 0xac\n0x0804b0bc      mov eax, dword [eax]\n0x0804b0be      cmp eax, 0x524a6c42                                    ; 'BlJR'\n0x0804b0c3      sete al\n0x0804b0c6      movzx eax, al\n0x0804b0c9      imul eax, edx\n0x0804b0cc      shl eax, 5\n0x0804b0cf      mov edx, eax\n0x0804b0d1      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b0d4      add eax, edx\n0x0804b0d6      sub esp, 8\n0x0804b0d9      push eax\n0x0804b0da      push dword [arg_8h]\n0x0804b0dd      call sym.next_token\n0x0804b0e2      add esp, 0x10\n0x0804b0e5      jmp 0x804b225\n", 
  "0x0804aa85": ";-- case 23 (0x804a99a):\n; CODE XREF from sym.base (0x804a99a)\n0x0804aa85      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aa88      add eax, 0x48                                          ; 'H'\n0x0804aa8b      mov eax, dword [eax]\n0x0804aa8d      cmp eax, 0x43764c79                                    ; 'yLvC'\n0x0804aa92      jne 0x804aabb\n", 
  "0x0804b0ea": ";-- case 20 (0x804a99a):\n; CODE XREF from sym.base (0x804a99a)\n0x0804b0ea      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b0ed      add eax, 0xb4\n0x0804b0f2      mov eax, dword [eax]\n0x0804b0f4      cmp eax, 0x69504b47                                    ; 'GKPi'\n0x0804b0f9      jne 0x804b122\n", 
  "0x0804adcc": "0x0804adcc      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804adcf      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804add2      and eax, 7\n0x0804add5      jmp 0x804addc\n", 
  "0x0804af25": "0x0804af25      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804af2a      sub esp, 0xc\n0x0804af2d      push 0xca0                                             ; 3232\n0x0804af32      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804af37      push 0xd5fc\n0x0804af3c      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804af41      push eax                                               ; FILE *stream\n0x0804af42      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804af47      add esp, 0x20\n0x0804af4a      test eax, eax\n", 
  "0x0804adbf": ";-- cases 2...7 (0x804a99a):\n;-- case 10 (0x804a99a):\n; CODE XREF from sym.base (0x804a99a)\n0x0804adbf      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804adc2      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804adc5      and eax, 0x18\n0x0804adc8      test eax, eax\n0x0804adca      je 0x804add7\n", 
  "0x0804addc": "; CODE XREF from sym.base (0x804add5)\n0x0804addc      mov dword [var_ch], eax\n0x0804addf      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ade2      add eax, 0x98\n0x0804ade7      mov eax, dword [eax]\n0x0804ade9      cmp eax, 0x73494470                                    ; 'pDIs'\n0x0804adee      jne 0x804ae17\n", 
  "0x0804b1d8": "0x0804b1d8      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b1db      mov dword [eax + 8], 0x19                              ; [0x19:4]=-1 ; 25\n0x0804b1e2      jmp 0x804b225\n", 
  "0x0804ae17": "; CODE XREF from sym.base (0x804adee)\n0x0804ae17      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ae1a      add eax, 0x98\n0x0804ae1f      mov edx, dword [eax]\n0x0804ae21      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ae24      add eax, 0x98\n0x0804ae29      mov eax, dword [eax]\n0x0804ae2b      cmp eax, 0x73494470                                    ; 'pDIs'\n0x0804ae30      sete al\n0x0804ae33      movzx eax, al\n0x0804ae36      imul eax, edx\n0x0804ae39      mov edx, eax\n0x0804ae3b      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ae3e      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804ae41      sub esp, 4\n0x0804ae44      push edx\n0x0804ae45      push eax\n0x0804ae46      push dword [arg_8h]\n0x0804ae49      call sym.new_expr\n0x0804ae4e      add esp, 0x10\n0x0804ae51      mov dword [var_14h], eax\n0x0804ae54      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ae57      mov edx, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804ae5a      mov eax, dword [var_14h]\n0x0804ae5d      mov dword [eax + 4], edx\n0x0804ae60      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ae63      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804ae66      and eax, 0x10\n0x0804ae69      test eax, eax\n0x0804ae6b      je 0x804ae7d\n", 
  "0x0804b193": "; CODE XREF from sym.base (0x804b16a)\n0x0804b193      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b196      add eax, 0x58                                          ; 'X'\n0x0804b199      mov edx, dword [eax]\n0x0804b19b      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b19e      add eax, 0x58                                          ; 'X'\n0x0804b1a1      mov eax, dword [eax]\n0x0804b1a3      cmp eax, 0x58504e72                                    ; 'rNPX'\n0x0804b1a8      sete al\n0x0804b1ab      movzx eax, al\n0x0804b1ae      imul eax, edx\n0x0804b1b1      shl eax, 5\n0x0804b1b4      mov edx, eax\n0x0804b1b6      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b1b9      add eax, edx\n0x0804b1bb      sub esp, 8\n0x0804b1be      push eax\n0x0804b1bf      push dword [arg_8h]\n0x0804b1c2      call sym.list\n0x0804b1c7      add esp, 0x10\n0x0804b1ca      mov dword [var_14h], eax\n0x0804b1cd      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b1d0      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804b1d3      cmp eax, 0x1d                                          ; 29\n0x0804b1d6      je 0x804b1e4\n", 
  "0x0804aabb": "; CODE XREF from sym.base (0x804aa92)\n0x0804aabb      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aabe      add eax, 0x48                                          ; 'H'\n0x0804aac1      mov edx, dword [eax]\n0x0804aac3      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aac6      add eax, 0x48                                          ; 'H'\n0x0804aac9      mov eax, dword [eax]\n0x0804aacb      cmp eax, 0x43764c79                                    ; 'yLvC'\n0x0804aad0      sete al\n0x0804aad3      movzx eax, al\n0x0804aad6      imul eax, edx\n0x0804aad9      sub esp, 4\n0x0804aadc      push 0\n0x0804aade      push eax\n0x0804aadf      push dword [arg_8h]\n0x0804aae2      call sym.new_expr\n0x0804aae7      add esp, 0x10\n0x0804aaea      mov dword [var_14h], eax\n0x0804aaed      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804aaf0      mov edx, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804aaf3      mov eax, dword [var_14h]\n0x0804aaf6      mov dword [eax + 4], edx\n0x0804aaf9      sub esp, 8\n0x0804aafc      push dword [arg_ch]\n0x0804aaff      push dword [arg_8h]\n0x0804ab02      call sym.next_token\n0x0804ab07      add esp, 0x10\n; CODE XREF from sym.base (0x804ab00)\n0x0804ab0a      jmp 0x804b225\n", 
  "0x0804b225": "; XREFS: CODE 0x0804aa80  CODE 0x0804ab0a  CODE 0x0804adba  CODE 0x0804af05  \n; XREFS: CODE 0x0804b06d  CODE 0x0804b0e5  CODE 0x0804b1e2  CODE 0x0804b1f5  \n; XREFS: CODE 0x0804b222  \n0x0804b225      mov eax, dword [var_14h]\n0x0804b228      mov ebx, dword [var_4h]\n0x0804b22b      leave\n0x0804b22c      ret\n", 
  "0x0804ae7d": "; CODE XREF from sym.base (0x804ae6b)\n0x0804ae7d      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ae80      add eax, 0x9c\n0x0804ae85      mov eax, dword [eax]\n0x0804ae87      cmp eax, 0x67646962                                    ; 'bidg'\n0x0804ae8c      jne 0x804aeb5\n", 
  "0x0804a99c": ";-- case 22 (0x804a99a):\n; CODE XREF from sym.base (0x804a99a)\n0x0804a99c      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804a99f      add eax, 0x5c                                          ; '\\\\'\n0x0804a9a2      mov eax, dword [eax]\n0x0804a9a4      cmp eax, 0x444f7847                                    ; 'GxOD'\n0x0804a9a9      jne 0x804a9d2\n", 
  "0x0804aa49": "; CODE XREF from sym.base (0x804aa20)\n0x0804aa49      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aa4c      add eax, 0x60                                          ; '`'\n0x0804aa4f      mov edx, dword [eax]\n0x0804aa51      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aa54      add eax, 0x60                                          ; '`'\n0x0804aa57      mov eax, dword [eax]\n0x0804aa59      cmp eax, 0x594a7975                                    ; 'uyJY'\n0x0804aa5e      sete al\n0x0804aa61      movzx eax, al\n0x0804aa64      imul eax, edx\n0x0804aa67      shl eax, 5\n0x0804aa6a      mov edx, eax\n0x0804aa6c      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804aa6f      add eax, edx\n0x0804aa71      sub esp, 8\n0x0804aa74      push eax\n0x0804aa75      push dword [arg_8h]\n0x0804aa78      call sym.next_token\n0x0804aa7d      add esp, 0x10\n0x0804aa80      jmp 0x804b225\n", 
  "0x0804a9d2": "; CODE XREF from sym.base (0x804a9a9)\n0x0804a9d2      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804a9d5      add eax, 0x5c                                          ; '\\\\'\n0x0804a9d8      mov edx, dword [eax]\n0x0804a9da      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804a9dd      add eax, 0x5c                                          ; '\\\\'\n0x0804a9e0      mov eax, dword [eax]\n0x0804a9e2      cmp eax, 0x444f7847                                    ; 'GxOD'\n0x0804a9e7      sete al\n0x0804a9ea      movzx eax, al\n0x0804a9ed      imul eax, edx\n0x0804a9f0      add eax, 1\n0x0804a9f3      sub esp, 4\n0x0804a9f6      push 0\n0x0804a9f8      push eax\n0x0804a9f9      push dword [arg_8h]\n0x0804a9fc      call sym.new_expr\n0x0804aa01      add esp, 0x10\n0x0804aa04      mov dword [var_14h], eax\n0x0804aa07      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804aa0a      fld qword [eax + 0xc]\n0x0804aa0d      mov eax, dword [var_14h]\n0x0804aa10      fstp qword [eax + 4]\n0x0804aa13      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804aa16      add eax, 0x60                                          ; '`'\n0x0804aa19      mov eax, dword [eax]\n0x0804aa1b      cmp eax, 0x594a7975                                    ; 'uyJY'\n0x0804aa20      jne 0x804aa49\n", 
  "0x0804aefb": "0x0804aefb      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804aefe      mov dword [eax + 8], 0x19                              ; [0x19:4]=-1 ; 25\n0x0804af05      jmp 0x804b225\n", 
  "0x0804b16c": "0x0804b16c      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b171      sub esp, 0xc\n0x0804b174      push 0xcb1                                             ; 3249\n0x0804b179      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b17e      push 0x63f7\n0x0804b183      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804b188      push eax                                               ; FILE *stream\n0x0804b189      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b18e      add esp, 0x20\n0x0804b191      test eax, eax\n", 
  "0x0804b04c": "; CODE XREF from sym.base (0x804b038)\n0x0804b04c      nop\n", 
  "0x0804ac11": ";-- case 1 (0x804a99a):\n; CODE XREF from sym.base (0x804a99a)\n0x0804ac11      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ac14      add eax, 0x78                                          ; 'x'\n0x0804ac17      mov eax, dword [eax]\n0x0804ac19      cmp eax, 0x594e6a65                                    ; 'ejNY'\n0x0804ac1e      jne 0x804ac47\n", 
  "0x0804b03e": "; CODE XREF from sym.base (0x804af11)\n0x0804b03e      mov eax, dword [var_10h]\n0x0804b041      cmp eax, dword [var_ch]\n0x0804b044      jl 0x804af16\n", 
  "0x0804acdb": "; CODE XREF from sym.base (0x804acb2)\n0x0804acdb      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804acde      add eax, 0x7c                                          ; '|'\n0x0804ace1      mov edx, dword [eax]\n0x0804ace3      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ace6      add eax, 0x7c                                          ; '|'\n0x0804ace9      mov eax, dword [eax]\n0x0804aceb      cmp eax, 0x67705268                                    ; 'hRpg'\n0x0804acf0      sete al\n0x0804acf3      movzx eax, al\n0x0804acf6      imul eax, edx\n0x0804acf9      shl eax, 5\n0x0804acfc      mov edx, eax\n0x0804acfe      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ad01      add eax, edx\n0x0804ad03      sub esp, 8\n0x0804ad06      push eax\n0x0804ad07      push dword [arg_8h]\n0x0804ad0a      call sym.next_token\n0x0804ad0f      add esp, 0x10\n; CODE XREF from sym.base (0x804ad08)\n0x0804ad12      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad15      sub eax, 0xffffff80\n0x0804ad18      mov edx, dword [eax]\n0x0804ad1a      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad1d      add eax, 0x84\n0x0804ad22      mov eax, dword [eax]\n0x0804ad24      imul edx, eax\n0x0804ad27      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ad2a      add eax, 0x88\n0x0804ad2f      mov eax, dword [eax]\n0x0804ad31      sub edx, eax\n0x0804ad33      mov eax, edx\n0x0804ad35      cmp eax, 0x572a6c3a                                    ; ':l*W'\n0x0804ad3a      jne 0x804ad63\n", 
  "0x0804ab0f": ";-- case 0 (0x804a99a):\n; CODE XREF from sym.base (0x804a99a)\n0x0804ab0f      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ab12      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804ab15      sub esp, 4\n0x0804ab18      push 0\n0x0804ab1a      push eax\n0x0804ab1b      push dword [arg_8h]\n0x0804ab1e      call sym.new_expr\n0x0804ab23      add esp, 0x10\n0x0804ab26      mov dword [var_14h], eax\n0x0804ab29      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ab2c      mov edx, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804ab2f      mov eax, dword [var_14h]\n0x0804ab32      mov dword [eax + 4], edx\n0x0804ab35      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804ab38      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804ab3b      and eax, 0x10\n0x0804ab3e      test eax, eax\n0x0804ab40      je 0x804ab4e\n", 
  "0x0804b072": "; CODE XREF from sym.base (0x804b061)\n0x0804b072      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b075      add eax, 0xac\n0x0804b07a      mov eax, dword [eax]\n0x0804b07c      cmp eax, 0x524a6c42                                    ; 'BlJR'\n0x0804b081      jne 0x804b0aa\n", 
  "0x0804abfb": "; CODE XREF from sym.base (0x804abea)\n0x0804abfb      sub esp, 8\n0x0804abfe      push dword [arg_ch]\n0x0804ac01      push dword [arg_8h]\n0x0804ac04      call sym.next_token\n0x0804ac09      add esp, 0x10\n; CODE XREF from sym.base (0x804ac02)\n0x0804ac0c      jmp 0x804b224\n", 
  "0x0804ae8e": "0x0804ae8e      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804ae93      sub esp, 0xc\n0x0804ae96      push 0xc99                                             ; 3225\n0x0804ae9b      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804aea0      push 0xd3df\n0x0804aea5      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804aeaa      push eax                                               ; FILE *stream\n0x0804aeab      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804aeb0      add esp, 0x20\n0x0804aeb3      test eax, eax\n", 
  "0x0804b063": "; CODE XREF from sym.base (0x804b056)\n0x0804b063      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b066      mov dword [eax + 8], 0x19                              ; [0x19:4]=-1 ; 25\n0x0804b06d      jmp 0x804b225\n", 
  "0x0804aa22": "0x0804aa22      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804aa27      sub esp, 0xc\n0x0804aa2a      push 0xc6e                                             ; 3182\n0x0804aa2f      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804aa34      push 0x6508\n0x0804aa39      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804aa3e      push eax                                               ; FILE *stream\n0x0804aa3f      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804aa44      add esp, 0x20\n0x0804aa47      test eax, eax\n", 
  "0x0804a9ab": "0x0804a9ab      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804a9b0      sub esp, 0xc\n0x0804a9b3      push 0xc6c                                             ; 3180\n0x0804a9b8      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804a9bd      push 0x64d0\n0x0804a9c2      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804a9c7      push eax                                               ; FILE *stream\n0x0804a9c8      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804a9cd      add esp, 0x20\n0x0804a9d0      test eax, eax\n", 
  "0x0804b083": "0x0804b083      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b088      sub esp, 0xc\n0x0804b08b      push 0xca9                                             ; 3241\n0x0804b090      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b095      push 0xdd9f\n0x0804b09a      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804b09f      push eax                                               ; FILE *stream\n0x0804b0a0      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b0a5      add esp, 0x20\n0x0804b0a8      test eax, eax\n", 
  "0x0804b03a": "0x0804b03a      add dword [var_10h], 1\n", 
  "0x0804ab4e": "; CODE XREF from sym.base (0x804ab40)\n0x0804ab4e      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804ab51      add eax, 0xb0\n0x0804ab56      mov eax, dword [eax]\n0x0804ab58      cmp eax, 0x73584f66                                    ; 'fOXs'\n0x0804ab5d      jne 0x804ab86\n"
}