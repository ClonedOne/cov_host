digraph code {
	graph [bgcolor=azure fontsize=8 fontname="Courier" splines="ortho"];
	node [fillcolor=gray style=filled shape=box];
	edge [arrowhead="normal"];
	"0x08049b3e" -> "0x08049b56" [color="green"];
	"0x08049b3e" -> "0x08049b4e" [color="red"];
	"0x08049b3e" [URL="sym.new_expr/0x08049b3e", fillcolor="white",color="yellow", fontname="Courier",label="(fcn) sym.new_expr 346\l  sym.new_expr (int32_t arg_8h, void *arg_ch, void *s2);\l; var uint32_t var_18h @ ebp-0x18\l; var size_t n @ ebp-0x14\l; var size_t size @ ebp-0x10\l; var void *s1 @ ebp-0xc\l; arg int32_t arg_8h @ ebp+0x8\l; arg void *arg_ch @ ebp+0xc\l; arg void *s2 @ ebp+0x10\l; XREFS: CALL 0x0804a9fc  CALL 0x0804aae2  CALL 0x0804ab1e  CALL 0x0804ac75  \l; XREFS: CALL 0x0804ae49  CALL 0x0804b201  CALL 0x0804b4b9  CALL 0x0804b679  \l; XREFS: CALL 0x0804b84e  CALL 0x0804baa0  CALL 0x0804bd91  \l0x08049b3e      push ebp\l0x08049b3f      mov ebp, esp\l0x08049b41      sub esp, 0x18\l0x08049b44      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\l0x08049b47      and eax, 0x18\l0x08049b4a      test eax, eax\l0x08049b4c      je 0x8049b56\l"]
	"0x08049b4e" -> "0x08049b5b" [color="blue"];
	"0x08049b4e" [URL="sym.new_expr/0x08049b4e", fillcolor="white",color="yellow", fontname="Courier",label="0x08049b4e      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\l0x08049b51      and eax, 7\l0x08049b54      jmp 0x8049b5b\l"]
	"0x08049b56" -> "0x08049b5b" [color="blue"];
	"0x08049b56" [URL="sym.new_expr/0x08049b56", fillcolor="white",color="yellow", fontname="Courier",label="; CODE XREF from sym.new_expr (0x8049b4c)\l0x08049b56      mov eax, 0\l"]
	"0x08049b5b" -> "0x08049b78" [color="green"];
	"0x08049b5b" -> "0x08049b71" [color="red"];
	"0x08049b5b" [URL="sym.new_expr/0x08049b5b", fillcolor="white",color="yellow", fontname="Courier",label="; CODE XREF from sym.new_expr (0x8049b54)\l0x08049b5b      mov dword [var_18h], eax\l0x08049b5e      mov eax, dword [var_18h]\l0x08049b61      shl eax, 2\l0x08049b64      mov dword [n], eax\l0x08049b67      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\l0x08049b6a      and eax, 0x10\l0x08049b6d      test eax, eax\l0x08049b6f      je 0x8049b78\l"]
	"0x08049b71" -> "0x08049b7d" [color="blue"];
	"0x08049b71" [URL="sym.new_expr/0x08049b71", fillcolor="white",color="yellow", fontname="Courier",label="0x08049b71      mov edx, 4\l0x08049b76      jmp 0x8049b7d\l"]
	"0x08049b78" -> "0x08049b7d" [color="blue"];
	"0x08049b78" [URL="sym.new_expr/0x08049b78", fillcolor="white",color="yellow", fontname="Courier",label="; CODE XREF from sym.new_expr (0x8049b6f)\l0x08049b78      mov edx, 0\l"]
	"0x08049b7d" -> "0x08049bd0" [color="green"];
	"0x08049b7d" -> "0x08049ba9" [color="red"];
	"0x08049b7d" [URL="sym.new_expr/0x08049b7d", fillcolor="white",color="yellow", fontname="Courier",label="; CODE XREF from sym.new_expr (0x8049b76)\l0x08049b7d      mov eax, dword [n]\l0x08049b80      add eax, edx\l0x08049b82      add eax, 0xc\l0x08049b85      mov dword [size], eax\l0x08049b88      mov eax, dword [size]\l0x08049b8b      sub esp, 0xc\l0x08049b8e      push eax                                               ; size_t size\l0x08049b8f      call sym.imp.malloc                                    ; void *malloc(size_t size)\l0x08049b94      add esp, 0x10\l0x08049b97      mov dword [s1], eax\l0x08049b9a      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\l0x08049b9d      add eax, 0x10\l0x08049ba0      mov eax, dword [eax]\l0x08049ba2      cmp eax, 0x76744f52                                    ; 'ROtv'\l0x08049ba7      jne 0x8049bd0\l"]
	"0x08049ba9" -> "0x08049bd0" [color="blue"];
	"0x08049ba9" [URL="sym.new_expr/0x08049ba9", fillcolor="white",color="yellow", fontname="Courier",label="0x08049ba9      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\l0x08049bae      sub esp, 0xc\l0x08049bb1      push 0xb7d                                             ; 2941\l0x08049bb6      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \"tinyexpr-pre.c\"\l0x08049bbb      push 0x7a7                                             ; 1959\l0x08049bc0      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \"\\nLAVALOG: %d: %s:%d\\n\" ; const char *format\l0x08049bc5      push eax                                               ; FILE *stream\l0x08049bc6      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\l0x08049bcb      add esp, 0x20\l0x08049bce      test eax, eax\l"]
	"0x08049bd0" -> "0x08049c81" [color="green"];
	"0x08049bd0" -> "0x08049c0a" [color="red"];
	"0x08049bd0" [URL="sym.new_expr/0x08049bd0", fillcolor="white",color="yellow", fontname="Courier",label="; CODE XREF from sym.new_expr (0x8049ba7)\l0x08049bd0      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\l0x08049bd3      add eax, 0x10\l0x08049bd6      mov edx, dword [eax]\l0x08049bd8      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\l0x08049bdb      add eax, 0x10\l0x08049bde      mov eax, dword [eax]\l0x08049be0      cmp eax, 0x76744f52                                    ; 'ROtv'\l0x08049be5      sete al\l0x08049be8      movzx eax, al\l0x08049beb      imul edx, eax\l0x08049bee      mov eax, dword [size]\l0x08049bf1      add eax, edx\l0x08049bf3      sub esp, 4\l0x08049bf6      push eax                                               ; size_t n\l0x08049bf7      push 0                                                 ; int c\l0x08049bf9      push dword [s1]                                        ; void *s\l0x08049bfc      call sym.imp.memset                                    ; void *memset(void *s, int c, size_t n)\l0x08049c01      add esp, 0x10\l0x08049c04      cmp dword [var_18h], 0\l0x08049c08      je 0x8049c81\l"]
	"0x08049c0a" -> "0x08049c81" [color="green"];
	"0x08049c0a" -> "0x08049c10" [color="red"];
	"0x08049c0a" [URL="sym.new_expr/0x08049c0a", fillcolor="white",color="yellow", fontname="Courier",label="0x08049c0a      cmp dword [s2], 0                                      ; [0x10:4]=-1 ; 0\l0x08049c0e      je 0x8049c81\l"]
	"0x08049c10" -> "0x08049c46" [color="green"];
	"0x08049c10" -> "0x08049c1f" [color="red"];
	"0x08049c10" [URL="sym.new_expr/0x08049c10", fillcolor="white",color="yellow", fontname="Courier",label="0x08049c10      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\l0x08049c13      add eax, 0x64                                          ; 'd'\l0x08049c16      mov eax, dword [eax]\l0x08049c18      cmp eax, 0x48716969                                    ; 'iiqH'\l; CODE XREF from sym.new_expr (0x8049c0b)\l0x08049c1d      jne 0x8049c46\l"]
	"0x08049c1f" -> "0x08049c46" [color="blue"];
	"0x08049c1f" [URL="sym.new_expr/0x08049c1f", fillcolor="white",color="yellow", fontname="Courier",label="0x08049c1f      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\l0x08049c24      sub esp, 0xc\l0x08049c27      push 0xb7f                                             ; 2943\l0x08049c2c      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \"tinyexpr-pre.c\"\l0x08049c31      push 0x65ec\l0x08049c36      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \"\\nLAVALOG: %d: %s:%d\\n\" ; const char *format\l0x08049c3b      push eax                                               ; FILE *stream\l0x08049c3c      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\l0x08049c41      add esp, 0x20\l0x08049c44      test eax, eax\l"]
	"0x08049c46" -> "0x08049c81" [color="blue"];
	"0x08049c46" [URL="sym.new_expr/0x08049c46", fillcolor="white",color="yellow", fontname="Courier",label="; CODE XREF from sym.new_expr (0x8049c1d)\l0x08049c46      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\l0x08049c49      add eax, 0x64                                          ; 'd'\l0x08049c4c      mov edx, dword [eax]\l0x08049c4e      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\l0x08049c51      add eax, 0x64                                          ; 'd'\l0x08049c54      mov eax, dword [eax]\l0x08049c56      cmp eax, 0x48716969                                    ; 'iiqH'\l0x08049c5b      sete al\l0x08049c5e      movzx eax, al\l0x08049c61      imul edx, eax\l0x08049c64      mov eax, dword [n]\l0x08049c67      add eax, edx\l0x08049c69      mov edx, eax\l0x08049c6b      mov eax, dword [s1]\l0x08049c6e      add eax, 0xc\l0x08049c71      sub esp, 4\l0x08049c74      push edx                                               ; size_t n\l0x08049c75      push dword [s2]                                        ; const void *s2\l0x08049c78      push eax                                               ; void *s1\l0x08049c79      call sym.imp.memcpy                                    ; void *memcpy(void *s1, const void *s2, size_t n)\l0x08049c7e      add esp, 0x10\l"]
	"0x08049c81" [URL="sym.new_expr/0x08049c81", fillcolor="white",color="yellow", fontname="Courier",label="0x08049c81      mov eax, dword [s1]\l0x08049c84      mov edx, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\l0x08049c87      mov dword [eax], edx\l0x08049c89      mov eax, dword [s1]\l0x08049c8c      mov dword [eax + 4], 0\l0x08049c93      mov eax, dword [s1]\l0x08049c96      leave\l0x08049c97      ret\l"]
}
