{
  "0x0804bd4b": "; CODE XREF from sym.list (0x804bd22)\n0x0804bd4b      mov eax, dword [var_1ch]\n0x0804bd4e      add eax, 0x40                                          ; '@'\n0x0804bd51      mov edx, dword [eax]\n0x0804bd53      mov eax, dword [var_1ch]\n0x0804bd56      add eax, 0x40                                          ; '@'\n0x0804bd59      mov eax, dword [eax]\n0x0804bd5b      cmp eax, 0x72616a42                                    ; 'Bjar'\n0x0804bd60      sete al\n0x0804bd63      movzx eax, al\n0x0804bd66      imul eax, edx\n0x0804bd69      shl eax, 5\n0x0804bd6c      mov edx, eax\n0x0804bd6e      mov eax, dword [var_20h]\n0x0804bd71      add eax, edx\n0x0804bd73      sub esp, 8\n0x0804bd76      push eax\n0x0804bd77      push dword [var_1ch]\n0x0804bd7a      call sym.expr\n0x0804bd7f      add esp, 0x10\n0x0804bd82      mov dword [var_10h], eax\n0x0804bd85      sub esp, 4\n0x0804bd88      lea eax, [var_14h]\n0x0804bd8b      push eax\n0x0804bd8c      push 0x2a                                              ; '*' ; 42\n0x0804bd8e      push dword [var_1ch]\n0x0804bd91      call sym.new_expr\n0x0804bd96      add esp, 0x10\n0x0804bd99      mov dword [var_18h], eax\n0x0804bd9c      mov eax, dword [var_18h]\n0x0804bd9f      mov dword [eax + 4], 0x804a39a                         ; sym.comma ; [0x804a39a:4]=0x83e58955 ; \\U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5S\\\\x83\\\\xec\\\\x14\\\\x83}\\\\f\\\n", 
  "0x0804bdc4": "0x0804bdc4      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\n", 
  "0x0804bbac": "0x0804bbac      sub esp, 0xc\n0x0804bbaf      push 0                                                 ; FILE *stream\n0x0804bbb1      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804bbb6      add esp, 0x10\n0x0804bbb9      test eax, eax\n", 
  "0x0804bd24": "0x0804bd24      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804bd29      sub esp, 0xc\n0x0804bd2c      push 0xd27                                             ; 3367\n0x0804bd31      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804bd36      push 0x730a\n0x0804bd3b      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804bd40      push eax                                               ; FILE *stream\n0x0804bd41      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804bd46      add esp, 0x20\n0x0804bd49      test eax, eax\n", 
  "0x0804bc8e": "; CODE XREF from sym.list (0x804bc7d)\n0x0804bc8e      mov eax, dword [var_1ch]\n0x0804bc91      lea edx, [eax + 0x74]                                  ; 't' ; 116\n0x0804bc94      mov eax, dword [var_20h]\n0x0804bc97      mov eax, dword [eax]\n0x0804bc99      mov eax, dword [eax]\n0x0804bc9b      mov dword [edx], eax\n0x0804bc9d      jmp 0x804bda6\n", 
  "0x0804bbbb": "; CODE XREF from sym.list (0x804bbaa)\n0x0804bbbb      mov eax, dword [var_1ch]\n0x0804bbbe      lea edx, [eax + 0x24]                                  ; '$' ; 36\n0x0804bbc1      mov eax, dword [var_20h]\n0x0804bbc4      mov eax, dword [eax]\n0x0804bbc6      mov eax, dword [eax]\n0x0804bbc8      mov dword [edx], eax\n", 
  "0x0804bbd9": "0x0804bbd9      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804bbde      sub esp, 0xc\n0x0804bbe1      push 0xd20                                             ; 3360\n0x0804bbe6      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804bbeb      push 0x461                                             ; 1121\n0x0804bbf0      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804bbf5      push eax                                               ; FILE *stream\n0x0804bbf6      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804bbfb      add esp, 0x20\n0x0804bbfe      test eax, eax\n", 
  "0x0804bc7f": "0x0804bc7f      sub esp, 0xc\n0x0804bc82      push 0                                                 ; FILE *stream\n0x0804bc84      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804bc89      add esp, 0x10\n0x0804bc8c      test eax, eax\n", 
  "0x0804bdc9": "; CODE XREF from sym.list (0x804bdc2)\n0x0804bdc9      leave\n0x0804bdca      ret\n", 
  "0x0804bdb5": "0x0804bdb5      mov eax, dword [var_18h]\n0x0804bdb8      mov ecx, dword [canary]\n0x0804bdbb      xor ecx, dword gs:[0x14]\n0x0804bdc2      je 0x804bdc9\n", 
  "0x0804bb7e": "0x0804bb7e      mov eax, dword [var_20h]\n0x0804bb81      mov eax, dword [eax]\n0x0804bb83      mov edx, dword [eax]\n0x0804bb85      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804bb8a      sub esp, 8\n0x0804bb8d      push 0xd1e                                             ; 3358\n0x0804bb92      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804bb97      push edx\n0x0804bb98      push 9                                                 ; 9\n0x0804bb9a      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804bb9f      push eax                                               ; FILE *stream\n0x0804bba0      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804bba5      add esp, 0x20\n0x0804bba8      test eax, eax\n0x0804bbaa      je 0x804bbbb\n", 
  "0x0804bcd8": "; CODE XREF from sym.list (0x804bcaf)\n0x0804bcd8      mov eax, dword [var_1ch]\n0x0804bcdb      add eax, 0x6c                                          ; 'l'\n0x0804bcde      mov edx, dword [eax]\n0x0804bce0      mov eax, dword [var_1ch]\n0x0804bce3      add eax, 0x6c                                          ; 'l'\n0x0804bce6      mov eax, dword [eax]\n0x0804bce8      cmp eax, 0x4e6a4a62                                    ; 'bJjN'\n0x0804bced      sete al\n0x0804bcf0      movzx eax, al\n0x0804bcf3      imul eax, edx\n0x0804bcf6      shl eax, 5\n0x0804bcf9      mov edx, eax\n0x0804bcfb      mov eax, dword [var_20h]\n0x0804bcfe      add eax, edx\n0x0804bd00      sub esp, 8\n0x0804bd03      push eax\n0x0804bd04      push dword [var_1ch]\n0x0804bd07      call sym.next_token\n0x0804bd0c      add esp, 0x10\n0x0804bd0f      mov eax, dword [var_18h]\n0x0804bd12      mov dword [var_14h], eax\n0x0804bd15      mov eax, dword [var_1ch]\n0x0804bd18      add eax, 0x40                                          ; '@'\n0x0804bd1b      mov eax, dword [eax]\n0x0804bd1d      cmp eax, 0x72616a42                                    ; 'Bjar'\n0x0804bd22      jne 0x804bd4b\n", 
  "0x0804bcb1": "0x0804bcb1      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804bcb6      sub esp, 0xc\n0x0804bcb9      push 0xd26                                             ; 3366\n0x0804bcbe      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804bcc3      push 0x71b7\n0x0804bcc8      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804bccd      push eax                                               ; FILE *stream\n0x0804bcce      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804bcd3      add esp, 0x20\n0x0804bcd6      test eax, eax\n", 
  "0x0804bc51": "0x0804bc51      mov eax, dword [var_20h]\n0x0804bc54      mov eax, dword [eax]\n0x0804bc56      mov edx, dword [eax]\n0x0804bc58      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804bc5d      sub esp, 8\n0x0804bc60      push 0xd23                                             ; 3363\n0x0804bc65      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804bc6a      push edx\n0x0804bc6b      push 0x1d                                              ; 29\n0x0804bc6d      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804bc72      push eax                                               ; FILE *stream\n0x0804bc73      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804bc78      add esp, 0x20\n0x0804bc7b      test eax, eax\n0x0804bc7d      je 0x804bc8e\n", 
  "0x0804bb75": "0x0804bb75      mov eax, dword [var_20h]\n0x0804bb78      mov eax, dword [eax]\n0x0804bb7a      test eax, eax\n0x0804bb7c      je 0x804bbca\n", 
  "0x0804bc44": "0x0804bc44      mov eax, dword [var_20h]\n0x0804bc47      mov eax, dword [eax]\n0x0804bc49      test eax, eax\n0x0804bc4b      je 0x804bda6\n", 
  "0x0804bca2": "; CODE XREF from sym.list (0x804bdaf)\n0x0804bca2      mov eax, dword [var_1ch]\n0x0804bca5      add eax, 0x6c                                          ; 'l'\n0x0804bca8      mov eax, dword [eax]\n0x0804bcaa      cmp eax, 0x4e6a4a62                                    ; 'bJjN'\n0x0804bcaf      jne 0x804bcd8\n", 
  "0x0804bbca": "; CODE XREFS from sym.list (0x804bb73, 0x804bb7c)\n0x0804bbca      mov eax, dword [var_1ch]\n0x0804bbcd      add eax, 4\n0x0804bbd0      mov eax, dword [eax]\n0x0804bbd2      cmp eax, 0x6c754774                                    ; 'tGul'\n0x0804bbd7      jne 0x804bc00\n", 
  "0x0804bc00": "; CODE XREF from sym.list (0x804bbd7)\n0x0804bc00      mov eax, dword [var_1ch]\n0x0804bc03      add eax, 4\n0x0804bc06      mov edx, dword [eax]\n0x0804bc08      mov eax, dword [var_1ch]\n0x0804bc0b      add eax, 4\n0x0804bc0e      mov eax, dword [eax]\n0x0804bc10      cmp eax, 0x6c754774                                    ; 'tGul'\n0x0804bc15      sete al\n0x0804bc18      movzx eax, al\n0x0804bc1b      imul eax, edx\n0x0804bc1e      shl eax, 5\n0x0804bc21      mov edx, eax\n0x0804bc23      mov eax, dword [var_20h]\n0x0804bc26      add eax, edx\n0x0804bc28      sub esp, 8\n0x0804bc2b      push eax\n0x0804bc2c      push dword [var_1ch]\n0x0804bc2f      call sym.expr\n0x0804bc34      add esp, 0x10\n0x0804bc37      mov dword [var_18h], eax\n0x0804bc3a      cmp dword [var_20h], 0\n0x0804bc3e      je 0x804bda6\n", 
  "0x0804bda6": "; CODE XREFS from sym.list (0x804bc3e, 0x804bc4b, 0x804bc9d)\n0x0804bda6      mov eax, dword [var_20h]\n0x0804bda9      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804bdac      cmp eax, 0x1b                                          ; 27\n0x0804bdaf      je 0x804bca2\n", 
  "0x0804bb52": "(fcn) sym.list 633\n  sym.list (int32_t arg_8h, int32_t arg_ch);\n; var uint32_t var_20h @ ebp-0x20\n; var int32_t var_1ch @ ebp-0x1c\n; var int32_t var_18h @ ebp-0x18\n; var int32_t var_14h @ ebp-0x14\n; var int32_t var_10h @ ebp-0x10\n; var int32_t canary @ ebp-0xc\n; arg int32_t arg_8h @ ebp+0x8\n; arg int32_t arg_ch @ ebp+0xc\n; CALL XREF from sym.base (0x804b1c2)\n; CALL XREF from sym.te_compile (0x804c8b7)\n0x0804bb52      push ebp\n0x0804bb53      mov ebp, esp\n0x0804bb55      sub esp, 0x28                                          ; '('\n0x0804bb58      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804bb5b      mov dword [var_1ch], eax\n0x0804bb5e      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804bb61      mov dword [var_20h], eax\n0x0804bb64      mov eax, dword gs:[0x14]                               ; [0x14:4]=-1 ; 20\n0x0804bb6a      mov dword [canary], eax\n0x0804bb6d      xor eax, eax\n0x0804bb6f      cmp dword [var_20h], 0\n0x0804bb73      je 0x804bbca\n"
}