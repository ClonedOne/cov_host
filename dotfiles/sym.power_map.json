{
  "0x0804b53d": "; CODE XREF from sym.power (0x804b536)\n0x0804b53d      leave\n0x0804b53e      ret\n", 
  "0x0804b4ce": "; CODE XREF from sym.power (0x804b432)\n0x0804b4ce      cmp dword [var_20h], 0\n0x0804b4d2      je 0x804b529\n", 
  "0x0804b287": "0x0804b287      sub esp, 0xc\n0x0804b28a      push 0                                                 ; FILE *stream\n0x0804b28c      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804b291      add esp, 0x10\n0x0804b294      test eax, eax\n", 
  "0x0804b51a": "; CODE XREF from sym.power (0x804b509)\n0x0804b51a      mov eax, dword [var_1ch]\n0x0804b51d      lea edx, [eax + 0x18]                                  ; 24\n0x0804b520      mov eax, dword [var_20h]\n0x0804b523      mov eax, dword [eax]\n0x0804b525      mov eax, dword [eax]\n0x0804b527      mov dword [edx], eax\n", 
  "0x0804b448": "0x0804b448      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b44d      sub esp, 0xc\n0x0804b450      push 0xcd7                                             ; 3287\n0x0804b455      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b45a      push 0xbb46\n0x0804b45f      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804b464      push eax                                               ; FILE *stream\n0x0804b465      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b46a      add esp, 0x20\n0x0804b46d      test eax, eax\n", 
  "0x0804b2c1": "; CODE XREF from sym.power (0x804b2bc)\n0x0804b2c1      cmp dword [var_20h], 0\n0x0804b2c5      je 0x804b322\n", 
  "0x0804b2c7": "0x0804b2c7      mov eax, dword [var_20h]\n0x0804b2ca      mov eax, dword [eax + 4]                               ; [0x4:4]=-1 ; 4\n0x0804b2cd      test eax, eax\n0x0804b2cf      je 0x804b322\n", 
  "0x0804b39a": "0x0804b39a      mov eax, dword [var_20h]\n0x0804b39d      mov eax, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804b3a0      cmp eax, sym.add                                       ; 0x804a2e9 ; \\U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcE\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdce\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcM\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcu\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\b\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\xddE\\\\xf8\\\\xd9\\\\xe0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5S\\\\x83\\\\xec\\\\x14\\\\x83}\\\\f\\\n0x0804b3a5      je 0x804b2b1\n", 
  "0x0804b529": "; CODE XREFS from sym.power (0x804b4d2, 0x804b4db)\n0x0804b529      mov eax, dword [var_14h]\n0x0804b52c      mov ecx, dword [canary]\n0x0804b52f      xor ecx, dword gs:[0x14]\n0x0804b536      je 0x804b53d\n", 
  "0x0804b22d": "(fcn) sym.power 786\n  sym.power (int32_t arg_8h, int32_t arg_ch);\n; var uint32_t var_20h @ ebp-0x20\n; var int32_t var_1ch @ ebp-0x1c\n; var uint32_t var_18h @ ebp-0x18\n; var int32_t var_14h @ ebp-0x14\n; var int32_t var_10h @ ebp-0x10\n; var int32_t canary @ ebp-0xc\n; arg int32_t arg_8h @ ebp+0x8\n; arg int32_t arg_ch @ ebp+0xc\n; CALL XREF from sym.base (0x804ada9)\n; CALL XREFS from sym.factor (0x804b565, 0x804b662)\n0x0804b22d      push ebp\n0x0804b22e      mov ebp, esp\n0x0804b230      sub esp, 0x28                                          ; '('\n0x0804b233      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804b236      mov dword [var_1ch], eax\n0x0804b239      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804b23c      mov dword [var_20h], eax\n0x0804b23f      mov eax, dword gs:[0x14]                               ; [0x14:4]=-1 ; 20\n0x0804b245      mov dword [canary], eax\n0x0804b248      xor eax, eax\n0x0804b24a      cmp dword [var_20h], 0\n0x0804b24e      je 0x804b2a5\n", 
  "0x0804b2a5": "; CODE XREFS from sym.power (0x804b24e, 0x804b257)\n0x0804b2a5      mov dword [var_18h], 1\n0x0804b2ac      jmp 0x804b38f\n", 
  "0x0804b358": "; CODE XREF from sym.power (0x804b32f)\n0x0804b358      mov eax, dword [var_1ch]\n0x0804b35b      add eax, 0x34                                          ; '4'\n0x0804b35e      mov edx, dword [eax]\n0x0804b360      mov eax, dword [var_1ch]\n0x0804b363      add eax, 0x34                                          ; '4'\n0x0804b366      mov eax, dword [eax]\n0x0804b368      cmp eax, 0x71437149                                    ; 'IqCq'\n0x0804b36d      sete al\n0x0804b370      movzx eax, al\n0x0804b373      imul eax, edx\n0x0804b376      shl eax, 5\n0x0804b379      mov edx, eax\n0x0804b37b      mov eax, dword [var_20h]\n0x0804b37e      add eax, edx\n0x0804b380      sub esp, 8\n0x0804b383      push eax\n0x0804b384      push dword [var_1ch]\n0x0804b387      call sym.next_token\n0x0804b38c      add esp, 0x10\n", 
  "0x0804b250": "0x0804b250      mov eax, dword [var_20h]\n0x0804b253      mov eax, dword [eax]\n0x0804b255      test eax, eax\n0x0804b257      je 0x804b2a5\n", 
  "0x0804b2be": "0x0804b2be      neg dword [var_18h]\n", 
  "0x0804b3bc": "; CODE XREF from sym.power (0x804b398)\n0x0804b3bc      cmp dword [var_18h], 1\n0x0804b3c0      jne 0x804b437\n", 
  "0x0804b331": "0x0804b331      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b336      sub esp, 0xc\n0x0804b339      push 0xccf                                             ; 3279\n0x0804b33e      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b343      push 0xb9ab\n0x0804b348      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804b34d      push eax                                               ; FILE *stream\n0x0804b34e      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b353      add esp, 0x20\n0x0804b356      test eax, eax\n", 
  "0x0804b30f": "; CODE XREF from sym.power (0x804b2fe)\n0x0804b30f      mov eax, dword [var_1ch]\n0x0804b312      lea edx, [eax + 0x90]                                  ; 144\n0x0804b318      mov eax, dword [var_20h]\n0x0804b31b      mov eax, dword [eax + 4]                               ; [0x4:4]=-1 ; 4\n0x0804b31e      mov eax, dword [eax]\n0x0804b320      mov dword [edx], eax\n", 
  "0x0804b3c2": "0x0804b3c2      mov eax, dword [var_1ch]\n0x0804b3c5      add eax, 0x44                                          ; 'D'\n0x0804b3c8      mov eax, dword [eax]\n0x0804b3ca      cmp eax, 0x4d62526e                                    ; 'nRbM'\n0x0804b3cf      jne 0x804b3f8\n", 
  "0x0804b46f": "; CODE XREF from sym.power (0x804b446)\n0x0804b46f      mov eax, dword [var_1ch]\n0x0804b472      add eax, 0x8c\n0x0804b477      mov edx, dword [eax]\n0x0804b479      mov eax, dword [var_1ch]\n0x0804b47c      add eax, 0x8c\n0x0804b481      mov eax, dword [eax]\n0x0804b483      cmp eax, 0x63646848                                    ; 'Hhdc'\n0x0804b488      sete al\n0x0804b48b      movzx eax, al\n0x0804b48e      imul eax, edx\n0x0804b491      shl eax, 5\n0x0804b494      mov edx, eax\n0x0804b496      mov eax, dword [var_20h]\n0x0804b499      add eax, edx\n0x0804b49b      sub esp, 8\n0x0804b49e      push eax\n0x0804b49f      push dword [var_1ch]\n0x0804b4a2      call sym.base\n0x0804b4a7      add esp, 0x10\n0x0804b4aa      mov dword [var_10h], eax\n0x0804b4ad      sub esp, 4\n0x0804b4b0      lea eax, [var_10h]\n0x0804b4b3      push eax\n0x0804b4b4      push 0x29                                              ; ')' ; 41\n0x0804b4b6      push dword [var_1ch]\n0x0804b4b9      call sym.new_expr\n0x0804b4be      add esp, 0x10\n0x0804b4c1      mov dword [var_14h], eax\n0x0804b4c4      mov eax, dword [var_14h]\n0x0804b4c7      mov dword [eax + 4], 0x804a381                         ; sym.negate ; [0x804a381:4]=0x83e58955 ; \\U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\b\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\xddE\\\\xf8\\\\xd9\\\\xe0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5S\\\\x83\\\\xec\\\\x14\\\\x83}\\\\f\\\n", 
  "0x0804b296": "; CODE XREF from sym.power (0x804b285)\n0x0804b296      mov eax, dword [var_1ch]\n0x0804b299      lea edx, [eax + 0x10]                                  ; 16\n0x0804b29c      mov eax, dword [var_20h]\n0x0804b29f      mov eax, dword [eax]\n0x0804b2a1      mov eax, dword [eax]\n0x0804b2a3      mov dword [edx], eax\n", 
  "0x0804b38f": "; CODE XREF from sym.power (0x804b2ac)\n0x0804b38f      mov eax, dword [var_20h]\n0x0804b392      mov eax, dword [eax + 8]                               ; [0x8:4]=-1 ; 8\n0x0804b395      cmp eax, 0x20                                          ; 32\n0x0804b398      jne 0x804b3bc\n", 
  "0x0804b3d1": "0x0804b3d1      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b3d6      sub esp, 0xc\n0x0804b3d9      push 0xcd5                                             ; 3285\n0x0804b3de      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b3e3      push 0x2d14\n0x0804b3e8      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804b3ed      push eax                                               ; FILE *stream\n0x0804b3ee      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b3f3      add esp, 0x20\n0x0804b3f6      test eax, eax\n", 
  "0x0804b538": "0x0804b538      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\n", 
  "0x0804b259": "0x0804b259      mov eax, dword [var_20h]\n0x0804b25c      mov eax, dword [eax]\n0x0804b25e      mov edx, dword [eax]\n0x0804b260      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b265      sub esp, 8\n0x0804b268      push 0xcc7                                             ; 3271\n0x0804b26d      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b272      push edx\n0x0804b273      push 4                                                 ; 4\n0x0804b275      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804b27a      push eax                                               ; FILE *stream\n0x0804b27b      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b280      add esp, 0x20\n0x0804b283      test eax, eax\n0x0804b285      je 0x804b296\n", 
  "0x0804b50b": "0x0804b50b      sub esp, 0xc\n0x0804b50e      push 0                                                 ; FILE *stream\n0x0804b510      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804b515      add esp, 0x10\n0x0804b518      test eax, eax\n", 
  "0x0804b2d1": "0x0804b2d1      mov eax, dword [var_20h]\n0x0804b2d4      mov eax, dword [eax + 4]                               ; [0x4:4]=-1 ; 4\n0x0804b2d7      mov edx, dword [eax]\n0x0804b2d9      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b2de      sub esp, 8\n0x0804b2e1      push 0xccd                                             ; 3277\n0x0804b2e6      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b2eb      push edx\n0x0804b2ec      push 0x24                                              ; '$' ; 36\n0x0804b2ee      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804b2f3      push eax                                               ; FILE *stream\n0x0804b2f4      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b2f9      add esp, 0x20\n0x0804b2fc      test eax, eax\n0x0804b2fe      je 0x804b30f\n", 
  "0x0804b2b1": "; CODE XREFS from sym.power (0x804b3a5, 0x804b3b6)\n0x0804b2b1      mov eax, dword [var_20h]\n0x0804b2b4      mov eax, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804b2b7      cmp eax, sym.sub                                       ; 0x804a30f ; \\U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdce\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcM\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcu\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\b\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\xddE\\\\xf8\\\\xd9\\\\xe0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5S\\\\x83\\\\xec\\\\x14\\\\x83}\\\\f\\\n0x0804b2bc      jne 0x804b2c1\n", 
  "0x0804b437": "; CODE XREF from sym.power (0x804b3c0)\n0x0804b437      mov eax, dword [var_1ch]\n0x0804b43a      add eax, 0x8c\n0x0804b43f      mov eax, dword [eax]\n0x0804b441      cmp eax, 0x63646848                                    ; 'Hhdc'\n0x0804b446      jne 0x804b46f\n", 
  "0x0804b4d4": "0x0804b4d4      mov eax, dword [var_20h]\n0x0804b4d7      mov eax, dword [eax]\n0x0804b4d9      test eax, eax\n0x0804b4db      je 0x804b529\n", 
  "0x0804b300": "0x0804b300      sub esp, 0xc\n0x0804b303      push 0                                                 ; FILE *stream\n0x0804b305      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804b30a      add esp, 0x10\n0x0804b30d      test eax, eax\n", 
  "0x0804b322": "; CODE XREFS from sym.power (0x804b2c5, 0x804b2cf)\n0x0804b322      mov eax, dword [var_1ch]\n0x0804b325      add eax, 0x34                                          ; '4'\n0x0804b328      mov eax, dword [eax]\n0x0804b32a      cmp eax, 0x71437149                                    ; 'IqCq'\n0x0804b32f      jne 0x804b358\n", 
  "0x0804b4dd": "0x0804b4dd      mov eax, dword [var_20h]\n0x0804b4e0      mov eax, dword [eax]\n0x0804b4e2      mov edx, dword [eax]\n0x0804b4e4      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804b4e9      sub esp, 8\n0x0804b4ec      push 0xcdc                                             ; 3292\n0x0804b4f1      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804b4f6      push edx\n0x0804b4f7      push 6                                                 ; 6\n0x0804b4f9      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804b4fe      push eax                                               ; FILE *stream\n0x0804b4ff      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804b504      add esp, 0x20\n0x0804b507      test eax, eax\n0x0804b509      je 0x804b51a\n", 
  "0x0804b3ab": "0x0804b3ab      mov eax, dword [var_20h]\n0x0804b3ae      mov eax, dword [eax + 0xc]                             ; [0xc:4]=-1 ; 12\n0x0804b3b1      cmp eax, sym.sub                                       ; 0x804a30f ; \\U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdce\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcM\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf8\\\\xdcu\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\b\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\xddE\\\\xf8\\\\xd9\\\\xe0\\\\xc9\\\\xc3U\\\\x89\\\\xe5\\\\x83\\\\xec\\\\x10\\\\x8bE\\\\b\\\\x89E\\\\xf8\\\\x8bE\\\\f\\\\x89E\\\\xfc\\\\x8bE\\\\x10\\\\x89E\\\\xf0\\\\x8bE\\\\x14\\\\x89E\\\\xf4\\\\xddE\\\\xf0\\\\xc9\\\\xc3U\\\\x89\\\\xe5S\\\\x83\\\\xec\\\\x14\\\\x83}\\\\f\\\n0x0804b3b6      je 0x804b2b1\n", 
  "0x0804b3f8": "; CODE XREF from sym.power (0x804b3cf)\n0x0804b3f8      mov eax, dword [var_1ch]\n0x0804b3fb      add eax, 0x44                                          ; 'D'\n0x0804b3fe      mov edx, dword [eax]\n0x0804b400      mov eax, dword [var_1ch]\n0x0804b403      add eax, 0x44                                          ; 'D'\n0x0804b406      mov eax, dword [eax]\n0x0804b408      cmp eax, 0x4d62526e                                    ; 'nRbM'\n0x0804b40d      sete al\n0x0804b410      movzx eax, al\n0x0804b413      imul eax, edx\n0x0804b416      shl eax, 5\n0x0804b419      mov edx, eax\n0x0804b41b      mov eax, dword [var_20h]\n0x0804b41e      add eax, edx\n0x0804b420      sub esp, 8\n0x0804b423      push eax\n0x0804b424      push dword [var_1ch]\n0x0804b427      call sym.base\n0x0804b42c      add esp, 0x10\n0x0804b42f      mov dword [var_14h], eax\n0x0804b432      jmp 0x804b4ce\n"
}