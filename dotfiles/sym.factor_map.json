{
  "0x0804b575": "| 0x0804b575      mov eax, dword [local_30h]\n| 0x0804b578      mov eax, dword [eax + 0xc]\n| 0x0804b57b      mov dword [local_18h], eax\n| 0x0804b57e      mov eax, dword [local_2ch]\n| 0x0804b581      add eax, 0x90\n| 0x0804b586      mov eax, dword [eax]\n| 0x0804b588      cmp eax, 0x41576f4a\n| 0x0804b58d      jne 0x804b5b6\n", 
  "0x0804b58f": "| 0x0804b58f      mov eax, dword [obj.stderr]\n| 0x0804b594      sub esp, 0xc\n| 0x0804b597      push 0xce6\n| 0x0804b59c      push str.tinyexpr_pre.c\n| 0x0804b5a1      push 0xc5ab\n| 0x0804b5a6      push str.LAVALOG:__d:__s:_d\n| 0x0804b5ab      push eax\n| 0x0804b5ac      call sym.imp.fprintf\n| 0x0804b5b1      add esp, 0x20\n| 0x0804b5b4      test eax, eax\n", 
  "0x0804b53f": "/ (fcn) sym.factor 384\n|   sym.factor (int arg_8h, int arg_ch);\n| ; var int local_30h @ ebp-0x30\n| ; var int local_2ch @ ebp-0x2c\n| ; var int local_1ch @ ebp-0x1c\n| ; var int local_18h @ ebp-0x18\n| ; var int local_14h @ ebp-0x14\n| ; var int local_10h @ ebp-0x10\n| ; var int local_ch @ ebp-0xc\n| ; arg int arg_8h @ ebp+0x8\n| ; arg int arg_ch @ ebp+0xc\n| 0x0804b53f      push ebp\n| 0x0804b540      mov ebp, esp\n| 0x0804b542      sub esp, 0x38\n| 0x0804b545      mov eax, dword [arg_8h]\n| 0x0804b548      mov dword [local_2ch], eax\n| 0x0804b54b      mov eax, dword [arg_ch]\n| 0x0804b54e      mov dword [local_30h], eax\n| 0x0804b551      mov eax, dword gs:[0x14]\n| 0x0804b557      mov dword [local_ch], eax\n| 0x0804b55a      xor eax, eax\n| 0x0804b55c      sub esp, 8\n| 0x0804b55f      push dword [local_30h]\n| 0x0804b562      push dword [local_2ch]\n| 0x0804b565      call sym.power\n| 0x0804b56a      add esp, 0x10\n| 0x0804b56d      mov dword [local_1ch], eax\n| 0x0804b570      jmp 0x804b68d\n", 
  "0x0804b5b6": "| 0x0804b5b6      mov eax, dword [local_2ch]\n| 0x0804b5b9      add eax, 0x90\n| 0x0804b5be      mov edx, dword [eax]\n| 0x0804b5c0      mov eax, dword [local_2ch]\n| 0x0804b5c3      add eax, 0x90\n| 0x0804b5c8      mov eax, dword [eax]\n| 0x0804b5ca      cmp eax, 0x41576f4a\n| 0x0804b5cf      sete al\n| 0x0804b5d2      movzx eax, al\n| 0x0804b5d5      imul eax, edx\n| 0x0804b5d8      shl eax, 5\n| 0x0804b5db      mov edx, eax\n| 0x0804b5dd      mov eax, dword [local_30h]\n| 0x0804b5e0      add eax, edx\n| 0x0804b5e2      sub esp, 8\n| 0x0804b5e5      push eax\n| 0x0804b5e6      push dword [local_2ch]\n| 0x0804b5e9      call sym.next_token\n| 0x0804b5ee      add esp, 0x10\n| 0x0804b5f1      mov eax, dword [local_1ch]\n| 0x0804b5f4      mov dword [local_14h], eax\n| 0x0804b5f7      mov eax, dword [local_2ch]\n| 0x0804b5fa      add eax, 0x94\n| 0x0804b5ff      mov eax, dword [eax]\n| 0x0804b601      cmp eax, 0x52587973\n| 0x0804b606      jne 0x804b62f\n", 
  "0x0804b6bd": "| 0x0804b6bd      leave\n\\\\ 0x0804b6be      ret\n", 
  "0x0804b68d": "| 0x0804b68d      mov eax, dword [local_30h]\n| 0x0804b690      mov eax, dword [eax + 8]\n| 0x0804b693      cmp eax, 0x20\n| 0x0804b696      jne 0x804b6a9\n", 
  "0x0804b6a9": "| 0x0804b6a9      mov eax, dword [local_1ch]\n| 0x0804b6ac      mov ecx, dword [local_ch]\n| 0x0804b6af      xor ecx, dword gs:[0x14]\n| 0x0804b6b6      je 0x804b6bd\n", 
  "0x0804b6b8": "| 0x0804b6b8      call sym.imp.__stack_chk_fail\n", 
  "0x0804b608": "| 0x0804b608      mov eax, dword [obj.stderr]\n| 0x0804b60d      sub esp, 0xc\n| 0x0804b610      push 0xce7\n| 0x0804b615      push str.tinyexpr_pre.c\n| 0x0804b61a      push 0xc5e7\n| 0x0804b61f      push str.LAVALOG:__d:__s:_d\n| 0x0804b624      push eax\n| 0x0804b625      call sym.imp.fprintf\n| 0x0804b62a      add esp, 0x20\n| 0x0804b62d      test eax, eax\n", 
  "0x0804b62f": "| 0x0804b62f      mov eax, dword [local_2ch]\n| 0x0804b632      add eax, 0x94\n| 0x0804b637      mov edx, dword [eax]\n| 0x0804b639      mov eax, dword [local_2ch]\n| 0x0804b63c      add eax, 0x94\n| 0x0804b641      mov eax, dword [eax]\n| 0x0804b643      cmp eax, 0x52587973\n| 0x0804b648      sete al\n| 0x0804b64b      movzx eax, al\n| 0x0804b64e      imul eax, edx\n| 0x0804b651      shl eax, 5\n| 0x0804b654      mov edx, eax\n| 0x0804b656      mov eax, dword [local_30h]\n| 0x0804b659      add eax, edx\n| 0x0804b65b      sub esp, 8\n| 0x0804b65e      push eax\n| 0x0804b65f      push dword [local_2ch]\n| 0x0804b662      call sym.power\n| 0x0804b667      add esp, 0x10\n| 0x0804b66a      mov dword [local_10h], eax\n| 0x0804b66d      sub esp, 4\n| 0x0804b670      lea eax, dword [local_14h]\n| 0x0804b673      push eax\n| 0x0804b674      push 0x2a\n| 0x0804b676      push dword [local_2ch]\n| 0x0804b679      call sym.new_expr\n| 0x0804b67e      add esp, 0x10\n| 0x0804b681      mov dword [local_1ch], eax\n| 0x0804b684      mov eax, dword [local_1ch]\n| 0x0804b687      mov edx, dword [local_18h]\n| 0x0804b68a      mov dword [eax + 4], edx\n", 
  "0x0804b698": "| 0x0804b698      mov eax, dword [local_30h]\n| 0x0804b69b      mov eax, dword [eax + 0xc]\n| 0x0804b69e      cmp eax, sym.imp.pow\n| 0x0804b6a3      je 0x804b575\n"
}