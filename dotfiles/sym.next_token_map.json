{
  "0x0804a401": "| 0x0804a401      sub esp, 0xc\n| 0x0804a404      push 0\n| 0x0804a406      call sym.imp.fflush\n| 0x0804a40b      add esp, 0x10\n| 0x0804a40e      test eax, eax\n", 
  "0x0804a67e": "| 0x0804a67e      mov eax, dword [arg_ch]\n| 0x0804a681      mov eax, dword [eax]\n| 0x0804a683      test eax, eax\n| 0x0804a685      je 0x804a6d6\n", 
  "0x0804a94d": "| 0x0804a94d      mov eax, dword [arg_ch]\n| 0x0804a950      mov dword [eax + 8], 0x19\n| 0x0804a957      jmp 0x804a963\n", 
  "0x0804a55e": "| 0x0804a55e      mov eax, dword [arg_ch]\n| 0x0804a561      mov eax, dword [eax + 4]\n| 0x0804a564      movzx eax, byte [eax]\n| 0x0804a567      cmp al, 0x39\n| 0x0804a569      jle 0x804a528\n", 
  "0x0804a63a": "| 0x0804a63a      mov eax, dword [arg_8h]\n| 0x0804a63d      add eax, 0x74\n| 0x0804a640      mov edx, dword [eax]\n| 0x0804a642      mov eax, dword [arg_8h]\n| 0x0804a645      add eax, 0x74\n| 0x0804a648      mov eax, dword [eax]\n| 0x0804a64a      cmp eax, 0x66426148\n| 0x0804a64f      sete al\n| 0x0804a652      movzx eax, al\n| 0x0804a655      imul eax, edx\n| 0x0804a658      mov edx, eax\n| 0x0804a65a      mov eax, dword [local_ch]\n| 0x0804a65d      add eax, edx\n| 0x0804a65f      sub esp, 4\n| 0x0804a662      push ebx\n| 0x0804a663      push eax\n| 0x0804a664      push dword [arg_8h]\n| 0x0804a667      call sym.find_builtin\n| 0x0804a66c      add esp, 0x10\n| 0x0804a66f      mov dword [local_10h], eax\n", 
  "0x0804a672": "| 0x0804a672      cmp dword [local_10h], 0\n| 0x0804a676      jne 0x804a6e5\n", 
  "0x0804a3d3": "| 0x0804a3d3      mov eax, dword [arg_ch]\n| 0x0804a3d6      mov eax, dword [eax]\n| 0x0804a3d8      mov edx, dword [eax]\n| 0x0804a3da      mov eax, dword [obj.stderr]\n| 0x0804a3df      sub esp, 8\n| 0x0804a3e2      push 0xc11\n| 0x0804a3e7      push str.tinyexpr_pre.c\n| 0x0804a3ec      push edx\n| 0x0804a3ed      push 0x2e\n| 0x0804a3ef      push str.DFLOG:_d__d:__s:_d\n| 0x0804a3f4      push eax\n| 0x0804a3f5      call sym.imp.fprintf\n| 0x0804a3fa      add esp, 0x20\n| 0x0804a3fd      test eax, eax\n| 0x0804a3ff      je 0x804a410\n", 
  "0x0804a742": "| 0x0804a742      mov eax, dword [arg_ch]\n| 0x0804a745      mov eax, dword [eax + 4]\n| 0x0804a748      lea ecx, dword [eax + 1]\n| 0x0804a74b      mov edx, dword [arg_ch]\n| 0x0804a74e      mov dword [edx + 4], ecx\n| 0x0804a751      movzx eax, byte [eax]\n| 0x0804a754      movsx eax, al\n| 0x0804a757      sub eax, 9\n| 0x0804a75a      cmp eax, 0x55\n| 0x0804a75d      ja 0x804a94d\n", 
  "0x0804a3ca": "| 0x0804a3ca      mov eax, dword [arg_ch]\n| 0x0804a3cd      mov eax, dword [eax]\n| 0x0804a3cf      test eax, eax\n| 0x0804a3d1      je 0x804a422\n", 
  "0x0804a544": "| 0x0804a544      mov eax, dword [arg_ch]\n| 0x0804a547      mov eax, dword [eax + 4]\n| 0x0804a54a      movzx eax, byte [eax]\n| 0x0804a54d      cmp al, 0x7a\n| 0x0804a54f      jle 0x804a528\n", 
  "0x0804a6d6": "| 0x0804a6d6      mov eax, dword [arg_ch]\n| 0x0804a6d9      mov dword [eax + 8], 0x19\n| 0x0804a6e0      jmp 0x804a959\n", 
  "0x0804a482": "| 0x0804a482      mov eax, dword [obj.stderr]\n| 0x0804a487      sub esp, 0xc\n| 0x0804a48a      push 0xc1e\n| 0x0804a48f      push str.tinyexpr_pre.c\n| 0x0804a494      push 0x30cd\n| 0x0804a499      push str.LAVALOG:__d:__s:_d\n| 0x0804a49e      push eax\n| 0x0804a49f      call sym.imp.fprintf\n| 0x0804a4a4      add esp, 0x20\n| 0x0804a4a7      test eax, eax\n", 
  "0x0804a528": "| 0x0804a528      mov eax, dword [arg_ch]\n| 0x0804a52b      mov eax, dword [eax + 4]\n| 0x0804a52e      lea edx, dword [eax + 1]\n| 0x0804a531      mov eax, dword [arg_ch]\n| 0x0804a534      mov dword [eax + 4], edx\n", 
  "0x0804a972": "| 0x0804a972      mov ebx, dword [local_4h]\n| 0x0804a975      leave\n\\\\ 0x0804a976      ret\n", 
  "0x0804a6f7": "| 0x0804a6f7      mov eax, dword [eax*4 + 0x804d248]\n| 0x0804a6fe      jmp eax\n", 
  "0x0804a4a9": "| 0x0804a4a9      mov eax, dword [arg_ch]\n| 0x0804a4ac      lea ecx, dword [eax + 4]\n| 0x0804a4af      mov eax, dword [arg_8h]\n| 0x0804a4b2      add eax, 0x4c\n| 0x0804a4b5      mov edx, dword [eax]\n| 0x0804a4b7      mov eax, dword [arg_8h]\n| 0x0804a4ba      add eax, 0x4c\n| 0x0804a4bd      mov eax, dword [eax]\n| 0x0804a4bf      cmp eax, 0x69406645\n| 0x0804a4c4      sete al\n| 0x0804a4c7      movzx eax, al\n| 0x0804a4ca      imul eax, edx\n| 0x0804a4cd      shl eax, 2\n| 0x0804a4d0      lea edx, dword [ecx + eax]\n| 0x0804a4d3      mov eax, dword [arg_ch]\n| 0x0804a4d6      mov eax, dword [eax + 4]\n| 0x0804a4d9      sub esp, 8\n| 0x0804a4dc      push edx\n| 0x0804a4dd      push eax\n| 0x0804a4de      call sym.imp.strtod\n| 0x0804a4e3      add esp, 0x10\n| 0x0804a4e6      mov eax, dword [arg_ch]\n| 0x0804a4e9      fstp qword [eax + 0xc]\n| 0x0804a4ec      mov eax, dword [arg_ch]\n| 0x0804a4ef      mov dword [eax + 8], 0x1e\n| 0x0804a4f6      jmp 0x804a963\n", 
  "0x0804a963": "| 0x0804a963      mov eax, dword [arg_ch]\n| 0x0804a966      mov eax, dword [eax + 8]\n| 0x0804a969      cmp eax, 0x18\n| 0x0804a96c      je 0x804a42c\n", 
  "0x0804a42c": "| 0x0804a42c      mov eax, dword [arg_ch]\n| 0x0804a42f      mov eax, dword [eax + 4]\n| 0x0804a432      movzx eax, byte [eax]\n| 0x0804a435      test al, al\n| 0x0804a437      jne 0x804a448\n", 
  "0x0804a6b5": "| 0x0804a6b5      sub esp, 0xc\n| 0x0804a6b8      push 0\n| 0x0804a6ba      call sym.imp.fflush\n| 0x0804a6bf      add esp, 0x10\n| 0x0804a6c2      test eax, eax\n", 
  "0x0804a5f5": "| 0x0804a5f5      mov eax, dword [arg_ch]\n| 0x0804a5f8      mov eax, dword [eax + 4]\n| 0x0804a5fb      mov edx, eax\n| 0x0804a5fd      mov eax, dword [local_ch]\n| 0x0804a600      mov ebx, edx\n| 0x0804a602      sub ebx, eax\n| 0x0804a604      mov eax, dword [arg_8h]\n| 0x0804a607      add eax, 0x74\n| 0x0804a60a      mov eax, dword [eax]\n| 0x0804a60c      cmp eax, 0x66426148\n| 0x0804a611      jne 0x804a63a\n", 
  "0x0804a56b": "| 0x0804a56b      mov eax, dword [arg_ch]\n| 0x0804a56e      mov eax, dword [eax + 4]\n| 0x0804a571      movzx eax, byte [eax]\n| 0x0804a574      cmp al, 0x5f\n| 0x0804a576      je 0x804a528\n", 
  "0x0804a473": "| 0x0804a473      mov eax, dword [arg_8h]\n| 0x0804a476      add eax, 0x4c\n| 0x0804a479      mov eax, dword [eax]\n| 0x0804a47b      cmp eax, 0x69406645\n| 0x0804a480      jne 0x804a4a9\n", 
  "0x0804a593": "| 0x0804a593      mov eax, dword [obj.stderr]\n| 0x0804a598      sub esp, 0xc\n| 0x0804a59b      push 0xc27\n| 0x0804a5a0      push str.tinyexpr_pre.c\n| 0x0804a5a5      push 0x2d3\n| 0x0804a5aa      push str.LAVALOG:__d:__s:_d\n| 0x0804a5af      push eax\n| 0x0804a5b0      call sym.imp.fprintf\n| 0x0804a5b5      add esp, 0x20\n| 0x0804a5b8      test eax, eax\n", 
  "0x0804a959": "| 0x0804a959      nop\n| 0x0804a95a      jmp 0x804a963\n", 
  "0x0804a455": "| 0x0804a455      mov eax, dword [arg_ch]\n| 0x0804a458      mov eax, dword [eax + 4]\n| 0x0804a45b      movzx eax, byte [eax]\n| 0x0804a45e      cmp al, 0x39\n| 0x0804a460      jle 0x804a473\n", 
  "0x0804a462": "| 0x0804a462      mov eax, dword [arg_ch]\n| 0x0804a465      mov eax, dword [eax + 4]\n| 0x0804a468      movzx eax, byte [eax]\n| 0x0804a46b      cmp al, 0x2e\n| 0x0804a46d      jne 0x804a4fb\n", 
  "0x0804a410": "| 0x0804a410      mov eax, dword [arg_8h]\n| 0x0804a413      lea edx, dword [eax + 0xb8]\n| 0x0804a419      mov eax, dword [arg_ch]\n| 0x0804a41c      mov eax, dword [eax]\n| 0x0804a41e      mov eax, dword [eax]\n| 0x0804a420      mov dword [edx], eax\n", 
  "0x0804a763": "| 0x0804a763      mov eax, dword [eax*4 + 0x804d2a8]\n| 0x0804a76a      jmp eax\n", 
  "0x0804a51d": "| 0x0804a51d      mov eax, dword [arg_ch]\n| 0x0804a520      mov eax, dword [eax + 4]\n| 0x0804a523      mov dword [local_ch], eax\n| 0x0804a526      jmp 0x804a537\n", 
  "0x0804a439": "| 0x0804a439      mov eax, dword [arg_ch]\n| 0x0804a43c      mov dword [eax + 8], 0x1a\n| 0x0804a443      jmp 0x804a972\n", 
  "0x0804a578": "| 0x0804a578      mov eax, dword [arg_ch]\n| 0x0804a57b      mov eax, dword [eax + 4]\n| 0x0804a57e      mov edx, eax\n| 0x0804a580      mov eax, dword [local_ch]\n| 0x0804a583      mov ebx, edx\n| 0x0804a585      sub ebx, eax\n| 0x0804a587      mov eax, dword [arg_8h]\n| 0x0804a58a      mov eax, dword [eax]\n| 0x0804a58c      cmp eax, 0x4757456d\n| 0x0804a591      jne 0x804a5ba\n", 
  "0x0804a551": "| 0x0804a551      mov eax, dword [arg_ch]\n| 0x0804a554      mov eax, dword [eax + 4]\n| 0x0804a557      movzx eax, byte [eax]\n| 0x0804a55a      cmp al, 0x2f\n| 0x0804a55c      jle 0x804a56b\n", 
  "0x0804a3bd": "/ (fcn) sym.next_token 912\n|   sym.next_token (int arg_8h, int arg_ch);\n| ; var int local_10h @ ebp-0x10\n| ; var int local_ch @ ebp-0xc\n| ; var int local_4h @ ebp-0x4\n| ; arg int arg_8h @ ebp+0x8\n| ; arg int arg_ch @ ebp+0xc\n| 0x0804a3bd      push ebp\n| 0x0804a3be      mov ebp, esp\n| 0x0804a3c0      push ebx\n| 0x0804a3c1      sub esp, 0x14\n| 0x0804a3c4      cmp dword [arg_ch], 0\n| 0x0804a3c8      je 0x804a422\n", 
  "0x0804a4fb": "| 0x0804a4fb      mov eax, dword [arg_ch]\n| 0x0804a4fe      mov eax, dword [eax + 4]\n| 0x0804a501      movzx eax, byte [eax]\n| 0x0804a504      cmp al, 0x60\n| 0x0804a506      jle 0x804a742\n", 
  "0x0804a50c": "| 0x0804a50c      mov eax, dword [arg_ch]\n| 0x0804a50f      mov eax, dword [eax + 4]\n| 0x0804a512      movzx eax, byte [eax]\n| 0x0804a515      cmp al, 0x7a\n| 0x0804a517      jg 0x804a742\n", 
  "0x0804a6e5": "| 0x0804a6e5      mov eax, dword [local_10h]\n| 0x0804a6e8      mov eax, dword [eax + 8]\n| 0x0804a6eb      and eax, 0x1f\n| 0x0804a6ee      cmp eax, 0x17\n| 0x0804a6f1      ja 0x804a959\n", 
  "0x0804a678": "| 0x0804a678      cmp dword [arg_ch], 0\n| 0x0804a67c      je 0x804a6d6\n", 
  "0x0804a613": "| 0x0804a613      mov eax, dword [obj.stderr]\n| 0x0804a618      sub esp, 0xc\n| 0x0804a61b      push 0xc28\n| 0x0804a620      push str.tinyexpr_pre.c\n| 0x0804a625      push 0xa97c\n| 0x0804a62a      push str.LAVALOG:__d:__s:_d\n| 0x0804a62f      push eax\n| 0x0804a630      call sym.imp.fprintf\n| 0x0804a635      add esp, 0x20\n| 0x0804a638      test eax, eax\n", 
  "0x0804a537": "| 0x0804a537      mov eax, dword [arg_ch]\n| 0x0804a53a      mov eax, dword [eax + 4]\n| 0x0804a53d      movzx eax, byte [eax]\n| 0x0804a540      cmp al, 0x60\n| 0x0804a542      jle 0x804a551\n", 
  "0x0804a6c4": "| 0x0804a6c4      mov eax, dword [arg_8h]\n| 0x0804a6c7      lea edx, dword [eax + 0xb0]\n| 0x0804a6cd      mov eax, dword [arg_ch]\n| 0x0804a6d0      mov eax, dword [eax]\n| 0x0804a6d2      mov eax, dword [eax]\n| 0x0804a6d4      mov dword [edx], eax\n", 
  "0x0804a448": "| 0x0804a448      mov eax, dword [arg_ch]\n| 0x0804a44b      mov eax, dword [eax + 4]\n| 0x0804a44e      movzx eax, byte [eax]\n| 0x0804a451      cmp al, 0x2f\n| 0x0804a453      jle 0x804a462\n", 
  "0x0804a5ba": "| 0x0804a5ba      mov eax, dword [arg_8h]\n| 0x0804a5bd      mov edx, dword [eax]\n| 0x0804a5bf      mov eax, dword [arg_8h]\n| 0x0804a5c2      mov eax, dword [eax]\n| 0x0804a5c4      cmp eax, 0x4757456d\n| 0x0804a5c9      sete al\n| 0x0804a5cc      movzx eax, al\n| 0x0804a5cf      imul eax, edx\n| 0x0804a5d2      shl eax, 5\n| 0x0804a5d5      mov edx, eax\n| 0x0804a5d7      mov eax, dword [arg_ch]\n| 0x0804a5da      add eax, edx\n| 0x0804a5dc      push ebx\n| 0x0804a5dd      push dword [local_ch]\n| 0x0804a5e0      push eax\n| 0x0804a5e1      push dword [arg_8h]\n| 0x0804a5e4      call sym.find_lookup\n| 0x0804a5e9      add esp, 0x10\n| 0x0804a5ec      mov dword [local_10h], eax\n| 0x0804a5ef      cmp dword [local_10h], 0\n| 0x0804a5f3      jne 0x804a672\n", 
  "0x0804a422": "| 0x0804a422      mov eax, dword [arg_ch]\n| 0x0804a425      mov dword [eax + 8], 0x18\n", 
  "0x0804a687": "| 0x0804a687      mov eax, dword [arg_ch]\n| 0x0804a68a      mov eax, dword [eax]\n| 0x0804a68c      mov edx, dword [eax]\n| 0x0804a68e      mov eax, dword [obj.stderr]\n| 0x0804a693      sub esp, 8\n| 0x0804a696      push 0xc2c\n| 0x0804a69b      push str.tinyexpr_pre.c\n| 0x0804a6a0      push edx\n| 0x0804a6a1      push 0x2c\n| 0x0804a6a3      push str.DFLOG:_d__d:__s:_d\n| 0x0804a6a8      push eax\n| 0x0804a6a9      call sym.imp.fprintf\n| 0x0804a6ae      add esp, 0x20\n| 0x0804a6b1      test eax, eax\n| 0x0804a6b3      je 0x804a6c4\n"
}