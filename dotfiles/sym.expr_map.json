{
  "0x0804babf": "| 0x0804babf      mov eax, dword [local_30h]\n| 0x0804bac2      mov eax, dword [eax + 0xc]\n| 0x0804bac5      cmp eax, sym.add\n| 0x0804baca      je 0x804b9a6\n", 
  "0x0804b914": "/ (fcn) sym.expr 574\n|   sym.expr (int arg_8h, int arg_ch);\n| ; var int local_30h @ ebp-0x30\n| ; var int local_2ch @ ebp-0x2c\n| ; var int local_1ch @ ebp-0x1c\n| ; var int local_18h @ ebp-0x18\n| ; var int local_14h @ ebp-0x14\n| ; var int local_10h @ ebp-0x10\n| ; var int local_ch @ ebp-0xc\n| ; arg int arg_8h @ ebp+0x8\n| ; arg int arg_ch @ ebp+0xc\n| 0x0804b914      push ebp\n| 0x0804b915      mov ebp, esp\n| 0x0804b917      sub esp, 0x38\n| 0x0804b91a      mov eax, dword [arg_8h]\n| 0x0804b91d      mov dword [local_2ch], eax\n| 0x0804b920      mov eax, dword [arg_ch]\n| 0x0804b923      mov dword [local_30h], eax\n| 0x0804b926      mov eax, dword gs:[0x14]\n| 0x0804b92c      mov dword [local_ch], eax\n| 0x0804b92f      xor eax, eax\n| 0x0804b931      mov eax, dword [local_2ch]\n| 0x0804b934      add eax, 8\n| 0x0804b937      mov eax, dword [eax]\n| 0x0804b939      cmp eax, 0x59546844\n| 0x0804b93e      jne 0x804b967\n", 
  "0x0804bb3c": "| 0x0804bb3c      mov eax, dword [local_1ch]\n| 0x0804bb3f      mov ecx, dword [local_ch]\n| 0x0804bb42      xor ecx, dword gs:[0x14]\n| 0x0804bb49      je 0x804bb50\n", 
  "0x0804b9e5": "| 0x0804b9e5      sub esp, 0xc\n| 0x0804b9e8      push 0\n| 0x0804b9ea      call sym.imp.fflush\n| 0x0804b9ef      add esp, 0x10\n| 0x0804b9f2      test eax, eax\n", 
  "0x0804bae7": "| 0x0804bae7      mov eax, dword [local_30h]\n| 0x0804baea      mov eax, dword [eax]\n| 0x0804baec      test eax, eax\n| 0x0804baee      je 0x804bb3c\n", 
  "0x0804b9a6": "| 0x0804b9a6      cmp dword [local_30h], 0\n| 0x0804b9aa      je 0x804ba04\n", 
  "0x0804bae1": "| 0x0804bae1      cmp dword [local_30h], 0\n| 0x0804bae5      je 0x804bb3c\n", 
  "0x0804b967": "| 0x0804b967      mov eax, dword [local_2ch]\n| 0x0804b96a      add eax, 8\n| 0x0804b96d      mov edx, dword [eax]\n| 0x0804b96f      mov eax, dword [local_2ch]\n| 0x0804b972      add eax, 8\n| 0x0804b975      mov eax, dword [eax]\n| 0x0804b977      cmp eax, 0x59546844\n| 0x0804b97c      sete al\n| 0x0804b97f      movzx eax, al\n| 0x0804b982      imul eax, edx\n| 0x0804b985      shl eax, 5\n| 0x0804b988      mov edx, eax\n| 0x0804b98a      mov eax, dword [local_30h]\n| 0x0804b98d      add eax, edx\n| 0x0804b98f      sub esp, 8\n| 0x0804b992      push eax\n| 0x0804b993      push dword [local_2ch]\n| 0x0804b996      call sym.term\n| 0x0804b99b      add esp, 0x10\n| 0x0804b99e      mov dword [local_1ch], eax\n| 0x0804b9a1      jmp 0x804bab4\n", 
  "0x0804bb1e": "| 0x0804bb1e      sub esp, 0xc\n| 0x0804bb21      push 0\n| 0x0804bb23      call sym.imp.fflush\n| 0x0804bb28      add esp, 0x10\n| 0x0804bb2b      test eax, eax\n", 
  "0x0804b940": "| 0x0804b940      mov eax, dword [obj.stderr]\n| 0x0804b945      sub esp, 0xc\n| 0x0804b948      push 0xd08\n| 0x0804b94d      push str.tinyexpr_pre.c\n| 0x0804b952      push 0x4b5\n| 0x0804b957      push str.LAVALOG:__d:__s:_d\n| 0x0804b95c      push eax\n| 0x0804b95d      call sym.imp.fprintf\n| 0x0804b962      add esp, 0x20\n| 0x0804b965      test eax, eax\n", 
  "0x0804b9ac": "| 0x0804b9ac      mov eax, dword [local_30h]\n| 0x0804b9af      mov eax, dword [eax + 4]\n| 0x0804b9b2      test eax, eax\n| 0x0804b9b4      je 0x804ba04\n", 
  "0x0804b9f4": "| 0x0804b9f4      mov eax, dword [local_2ch]\n| 0x0804b9f7      lea edx, dword [eax + 0x38]\n| 0x0804b9fa      mov eax, dword [local_30h]\n| 0x0804b9fd      mov eax, dword [eax + 4]\n| 0x0804ba00      mov eax, dword [eax]\n| 0x0804ba02      mov dword [edx], eax\n", 
  "0x0804bb4b": "| 0x0804bb4b      call sym.imp.__stack_chk_fail\n", 
  "0x0804b9b6": "| 0x0804b9b6      mov eax, dword [local_30h]\n| 0x0804b9b9      mov eax, dword [eax + 4]\n| 0x0804b9bc      mov edx, dword [eax]\n| 0x0804b9be      mov eax, dword [obj.stderr]\n| 0x0804b9c3      sub esp, 8\n| 0x0804b9c6      push 0xd0c\n| 0x0804b9cb      push str.tinyexpr_pre.c\n| 0x0804b9d0      push edx\n| 0x0804b9d1      push 0xe\n| 0x0804b9d3      push str.DFLOG:_d__d:__s:_d\n| 0x0804b9d8      push eax\n| 0x0804b9d9      call sym.imp.fprintf\n| 0x0804b9de      add esp, 0x20\n| 0x0804b9e1      test eax, eax\n| 0x0804b9e3      je 0x804b9f4\n", 
  "0x0804baf0": "| 0x0804baf0      mov eax, dword [local_30h]\n| 0x0804baf3      mov eax, dword [eax]\n| 0x0804baf5      mov edx, dword [eax]\n| 0x0804baf7      mov eax, dword [obj.stderr]\n| 0x0804bafc      sub esp, 8\n| 0x0804baff      push 0xd15\n| 0x0804bb04      push str.tinyexpr_pre.c\n| 0x0804bb09      push edx\n| 0x0804bb0a      push 0x1a\n| 0x0804bb0c      push str.DFLOG:_d__d:__s:_d\n| 0x0804bb11      push eax\n| 0x0804bb12      call sym.imp.fprintf\n| 0x0804bb17      add esp, 0x20\n| 0x0804bb1a      test eax, eax\n| 0x0804bb1c      je 0x804bb2d\n", 
  "0x0804bad0": "| 0x0804bad0      mov eax, dword [local_30h]\n| 0x0804bad3      mov eax, dword [eax + 0xc]\n| 0x0804bad6      cmp eax, sym.sub\n| 0x0804badb      je 0x804b9a6\n", 
  "0x0804bab4": "| 0x0804bab4      mov eax, dword [local_30h]\n| 0x0804bab7      mov eax, dword [eax + 8]\n| 0x0804baba      cmp eax, 0x20\n| 0x0804babd      jne 0x804bae1\n", 
  "0x0804bb50": "| 0x0804bb50      leave\n\\\\ 0x0804bb51      ret\n", 
  "0x0804ba43": "| 0x0804ba43      mov eax, dword [local_2ch]\n| 0x0804ba46      add eax, 0x14\n| 0x0804ba49      mov edx, dword [eax]\n| 0x0804ba4b      mov eax, dword [local_2ch]\n| 0x0804ba4e      add eax, 0x14\n| 0x0804ba51      mov eax, dword [eax]\n| 0x0804ba53      cmp eax, 0x40607544\n| 0x0804ba58      sete al\n| 0x0804ba5b      movzx eax, al\n| 0x0804ba5e      imul eax, edx\n| 0x0804ba61      shl eax, 5\n| 0x0804ba64      mov edx, eax\n| 0x0804ba66      mov eax, dword [local_30h]\n| 0x0804ba69      add eax, edx\n| 0x0804ba6b      sub esp, 8\n| 0x0804ba6e      push eax\n| 0x0804ba6f      push dword [local_2ch]\n| 0x0804ba72      call sym.next_token\n| 0x0804ba77      add esp, 0x10\n| 0x0804ba7a      mov eax, dword [local_1ch]\n| 0x0804ba7d      mov dword [local_14h], eax\n| 0x0804ba80      sub esp, 8\n| 0x0804ba83      push dword [local_30h]\n| 0x0804ba86      push dword [local_2ch]\n| 0x0804ba89      call sym.term\n| 0x0804ba8e      add esp, 0x10\n| 0x0804ba91      mov dword [local_10h], eax\n| 0x0804ba94      sub esp, 4\n| 0x0804ba97      lea eax, dword [local_14h]\n| 0x0804ba9a      push eax\n| 0x0804ba9b      push 0x2a\n| 0x0804ba9d      push dword [local_2ch]\n| 0x0804baa0      call sym.new_expr\n| 0x0804baa5      add esp, 0x10\n| 0x0804baa8      mov dword [local_1ch], eax\n| 0x0804baab      mov eax, dword [local_1ch]\n| 0x0804baae      mov edx, dword [local_18h]\n| 0x0804bab1      mov dword [eax + 4], edx\n", 
  "0x0804ba04": "| 0x0804ba04      mov eax, dword [local_30h]\n| 0x0804ba07      mov eax, dword [eax + 0xc]\n| 0x0804ba0a      mov dword [local_18h], eax\n| 0x0804ba0d      mov eax, dword [local_2ch]\n| 0x0804ba10      add eax, 0x14\n| 0x0804ba13      mov eax, dword [eax]\n| 0x0804ba15      cmp eax, 0x40607544\n| 0x0804ba1a      jne 0x804ba43\n", 
  "0x0804bb2d": "| 0x0804bb2d      mov eax, dword [local_2ch]\n| 0x0804bb30      lea edx, dword [eax + 0x68]\n| 0x0804bb33      mov eax, dword [local_30h]\n| 0x0804bb36      mov eax, dword [eax]\n| 0x0804bb38      mov eax, dword [eax]\n| 0x0804bb3a      mov dword [edx], eax\n", 
  "0x0804ba1c": "| 0x0804ba1c      mov eax, dword [obj.stderr]\n| 0x0804ba21      sub esp, 0xc\n| 0x0804ba24      push 0xd0f\n| 0x0804ba29      push str.tinyexpr_pre.c\n| 0x0804ba2e      push 0xaf9\n| 0x0804ba33      push str.LAVALOG:__d:__s:_d\n| 0x0804ba38      push eax\n| 0x0804ba39      call sym.imp.fprintf\n| 0x0804ba3e      add esp, 0x20\n| 0x0804ba41      test eax, eax\n"
}