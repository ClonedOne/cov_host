{
  "0x0804c861": "0x0804c861      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c866      sub esp, 0xc\n0x0804c869      push 0xd82                                             ; 3458\n0x0804c86e      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c873      push 0x2ba3\n0x0804c878      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804c87d      push eax                                               ; FILE *stream\n0x0804c87e      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804c883      add esp, 0x20\n0x0804c886      test eax, eax\n", 
  "0x0804cb23": "0x0804cb23      mov eax, dword [var_48h]\n0x0804cb26      mov dword [eax], 1\n", 
  "0x0804cb7a": "; CODE XREF from sym.te_compile (0x804cb30)\n0x0804cb7a      mov eax, 0\n0x0804cb7f      jmp 0x804cc92\n", 
  "0x0804c888": "; CODE XREF from sym.te_compile (0x804c85f)\n0x0804c888      mov eax, dword [var_3ch]\n0x0804c88b      add eax, 0x40                                          ; '@'\n0x0804c88e      mov edx, dword [eax]\n0x0804c890      mov eax, dword [var_3ch]\n0x0804c893      add eax, 0x40                                          ; '@'\n0x0804c896      mov eax, dword [eax]\n0x0804c898      cmp eax, 0x6b797650                                    ; 'Pvyk'\n0x0804c89d      sete al\n0x0804c8a0      movzx eax, al\n0x0804c8a3      imul eax, edx\n0x0804c8a6      shl eax, 5\n0x0804c8a9      mov edx, eax\n0x0804c8ab      lea eax, [var_2ch]\n0x0804c8ae      add eax, edx\n0x0804c8b0      sub esp, 8\n0x0804c8b3      push eax\n0x0804c8b4      push dword [var_3ch]\n0x0804c8b7      call sym.list\n0x0804c8bc      add esp, 0x10\n0x0804c8bf      mov dword [var_30h], eax\n0x0804c8c2      mov eax, dword [var_2ch]\n0x0804c8c5      test eax, eax\n0x0804c8c7      je 0x804c911\n", 
  "0x0804cc48": "; CODE XREF from sym.te_compile (0x804cc1f)\n0x0804cc48      mov eax, dword [var_3ch]\n0x0804cc4b      add eax, 0x1c\n0x0804cc4e      mov edx, dword [eax]\n0x0804cc50      mov eax, dword [var_3ch]\n0x0804cc53      add eax, 0x50                                          ; 'P'\n0x0804cc56      mov eax, dword [eax]\n0x0804cc58      imul edx, eax\n0x0804cc5b      mov eax, dword [var_3ch]\n0x0804cc5e      add eax, 0x54                                          ; 'T'\n0x0804cc61      mov eax, dword [eax]\n0x0804cc63      sub edx, eax\n0x0804cc65      mov eax, edx\n0x0804cc67      cmp eax, 0x9029ad8f\n0x0804cc6c      sete al\n0x0804cc6f      movzx edx, al\n0x0804cc72      mov eax, dword [var_3ch]\n0x0804cc75      add eax, 0x50                                          ; 'P'\n0x0804cc78      mov eax, dword [eax]\n0x0804cc7a      imul eax, edx\n0x0804cc7d      lea edx, [eax*4]\n0x0804cc84      mov eax, dword [var_48h]\n0x0804cc87      add eax, edx\n0x0804cc89      mov dword [eax], 0\n", 
  "0x0804cb32": "0x0804cb32      mov eax, dword [var_40h]\n0x0804cb35      mov edx, dword [eax]\n0x0804cb37      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804cb3c      sub esp, 8\n0x0804cb3f      push 0xd97                                             ; 3479\n0x0804cb44      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804cb49      push edx\n0x0804cb4a      push 0x1f                                              ; 31\n0x0804cb4c      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804cb51      push eax                                               ; FILE *stream\n0x0804cb52      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804cb57      add esp, 0x20\n0x0804cb5a      test eax, eax\n0x0804cb5c      je 0x804cb6d\n", 
  "0x0804ca54": "0x0804ca54      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804ca59      sub esp, 0xc\n0x0804ca5c      push 0xd90                                             ; 3472\n0x0804ca61      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804ca66      push 0x1c55\n0x0804ca6b      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804ca70      push eax                                               ; FILE *stream\n0x0804ca71      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804ca76      add esp, 0x20\n0x0804ca79      test eax, eax\n", 
  "0x0804cc21": "0x0804cc21      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804cc26      sub esp, 0xc\n0x0804cc29      push 0xd9c                                             ; 3484\n0x0804cc2e      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804cc33      push 0x3eb7\n0x0804cc38      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804cc3d      push eax                                               ; FILE *stream\n0x0804cc3e      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804cc43      add esp, 0x20\n0x0804cc46      test eax, eax\n", 
  "0x0804c8f5": "0x0804c8f5      sub esp, 0xc\n0x0804c8f8      push 0                                                 ; FILE *stream\n0x0804c8fa      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804c8ff      add esp, 0x10\n0x0804c902      test eax, eax\n", 
  "0x0804c9cb": "; CODE XREF from sym.te_compile (0x804c9ba)\n0x0804c9cb      mov eax, dword [var_3ch]\n0x0804c9ce      lea edx, [eax + 0x40]                                  ; '@' ; 64\n0x0804c9d1      mov eax, dword [var_40h]\n0x0804c9d4      mov eax, dword [eax]\n0x0804c9d6      mov dword [edx], eax\n", 
  "0x0804cacf": "0x0804cacf      mov eax, dword [var_28h]\n0x0804cad2      mov edx, dword [eax]\n0x0804cad4      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804cad9      sub esp, 8\n0x0804cadc      push 0xd92                                             ; 3474\n0x0804cae1      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804cae6      push edx\n0x0804cae7      push 0x2d                                              ; '-' ; 45\n0x0804cae9      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804caee      push eax                                               ; FILE *stream\n0x0804caef      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804caf4      add esp, 0x20\n0x0804caf7      test eax, eax\n0x0804caf9      je 0x804cb0a\n", 
  "0x0804c9d8": "; CODE XREF from sym.te_compile (0x804c98e)\n0x0804c9d8      cmp dword [var_48h], 0\n0x0804c9dc      je 0x804cb2c\n", 
  "0x0804ca23": "; CODE XREF from sym.te_compile (0x804ca12)\n0x0804ca23      mov eax, dword [var_3ch]\n0x0804ca26      lea edx, [eax + 0x6c]                                  ; 'l' ; 108\n0x0804ca29      mov eax, dword [var_40h]\n0x0804ca2c      mov eax, dword [eax]\n0x0804ca2e      mov dword [edx], eax\n", 
  "0x0804cb93": "0x0804cb93      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804cb98      sub esp, 0xc\n0x0804cb9b      push 0xd9b                                             ; 3483\n0x0804cba0      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804cba5      push 0x770b\n0x0804cbaa      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804cbaf      push eax                                               ; FILE *stream\n0x0804cbb0      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804cbb5      add esp, 0x20\n0x0804cbb8      test eax, eax\n", 
  "0x0804cb1a": "; CODE XREF from sym.te_compile (0x804cacd)\n0x0804cb1a      mov eax, dword [var_48h]\n0x0804cb1d      mov eax, dword [eax]\n0x0804cb1f      test eax, eax\n0x0804cb21      jne 0x804cb2c\n", 
  "0x0804cb84": "; CODE XREF from sym.te_compile (0x804c917)\n0x0804cb84      mov eax, dword [var_3ch]\n0x0804cb87      add eax, 0x70                                          ; 'p'\n0x0804cb8a      mov eax, dword [eax]\n0x0804cb8c      cmp eax, 0x4f437148                                    ; 'HqCO'\n0x0804cb91      jne 0x804cbba\n", 
  "0x0804c92c": "0x0804c92c      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c931      sub esp, 0xc\n0x0804c934      push 0xd88                                             ; 3464\n0x0804c939      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c93e      push 0x19b7\n0x0804c943      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804c948      push eax                                               ; FILE *stream\n0x0804c949      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804c94e      add esp, 0x20\n0x0804c951      test eax, eax\n", 
  "0x0804c7d2": "; CODE XREF from sym.te_compile (0x804c7c1)\n0x0804c7d2      mov eax, dword [var_3ch]\n0x0804c7d5      lea edx, [eax + 0xc]                                   ; 12\n0x0804c7d8      mov eax, dword [var_40h]\n0x0804c7db      mov eax, dword [eax]\n0x0804c7dd      mov dword [edx], eax\n", 
  "0x0804cbfb": "0x0804cbfb      mov eax, dword [var_3ch]\n0x0804cbfe      add eax, 0x1c\n0x0804cc01      mov edx, dword [eax]\n0x0804cc03      mov eax, dword [var_3ch]\n0x0804cc06      add eax, 0x50                                          ; 'P'\n0x0804cc09      mov eax, dword [eax]\n0x0804cc0b      imul edx, eax\n0x0804cc0e      mov eax, dword [var_3ch]\n0x0804cc11      add eax, 0x54                                          ; 'T'\n0x0804cc14      mov eax, dword [eax]\n0x0804cc16      sub edx, eax\n0x0804cc18      mov eax, edx\n0x0804cc1a      cmp eax, 0x9029ad8f\n0x0804cc1f      jne 0x804cc48\n", 
  "0x0804cb5e": "0x0804cb5e      sub esp, 0xc\n0x0804cb61      push 0                                                 ; FILE *stream\n0x0804cb63      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804cb68      add esp, 0x10\n0x0804cb6b      test eax, eax\n", 
  "0x0804cbba": "; CODE XREF from sym.te_compile (0x804cb91)\n0x0804cbba      mov eax, dword [var_3ch]\n0x0804cbbd      add eax, 0x70                                          ; 'p'\n0x0804cbc0      mov edx, dword [eax]\n0x0804cbc2      mov eax, dword [var_3ch]\n0x0804cbc5      add eax, 0x70                                          ; 'p'\n0x0804cbc8      mov eax, dword [eax]\n0x0804cbca      cmp eax, 0x4f437148                                    ; 'HqCO'\n0x0804cbcf      sete al\n0x0804cbd2      movzx eax, al\n0x0804cbd5      imul eax, edx\n0x0804cbd8      shl eax, 4\n0x0804cbdb      mov edx, eax\n0x0804cbdd      mov eax, dword [var_30h]\n0x0804cbe0      add eax, edx\n0x0804cbe2      sub esp, 8\n0x0804cbe5      push eax\n0x0804cbe6      push dword [var_3ch]\n0x0804cbe9      call sym.optimize\n0x0804cbee      add esp, 0x10\n0x0804cbf1      cmp dword [var_48h], 0\n0x0804cbf5      je 0x804cc8f\n", 
  "0x0804ca7b": "; CODE XREF from sym.te_compile (0x804ca52)\n0x0804ca7b      mov eax, dword [var_3ch]\n0x0804ca7e      add eax, 0x28                                          ; '('\n0x0804ca81      mov edx, dword [eax]\n0x0804ca83      mov eax, dword [var_3ch]\n0x0804ca86      add eax, 0x2c                                          ; ','\n0x0804ca89      mov eax, dword [eax]\n0x0804ca8b      add edx, eax\n0x0804ca8d      mov eax, dword [var_3ch]\n0x0804ca90      add eax, 0x30                                          ; '0'\n0x0804ca93      mov eax, dword [eax]\n0x0804ca95      imul eax, edx\n0x0804ca98      cmp eax, 0xed12e20e\n0x0804ca9d      sete al\n0x0804caa0      movzx edx, al\n0x0804caa3      mov eax, dword [var_3ch]\n0x0804caa6      add eax, 0x2c                                          ; ','\n0x0804caa9      mov eax, dword [eax]\n0x0804caab      imul eax, edx\n0x0804caae      lea edx, [eax*4]\n0x0804cab5      mov eax, dword [var_48h]\n0x0804cab8      add eax, edx\n0x0804caba      mov edx, dword [var_28h]\n0x0804cabd      mov ecx, edx\n0x0804cabf      mov edx, dword [var_2ch]\n0x0804cac2      sub ecx, edx\n0x0804cac4      mov edx, ecx\n0x0804cac6      mov dword [eax], edx\n0x0804cac8      mov eax, dword [var_28h]\n0x0804cacb      test eax, eax\n0x0804cacd      je 0x804cb1a\n", 
  "0x0804cc92": "; CODE XREF from sym.te_compile (0x804cb7f)\n0x0804cc92      mov ecx, dword [canary]\n0x0804cc95      xor ecx, dword gs:[0x14]\n0x0804cc9c      je 0x804cca3\n", 
  "0x0804cc9e": "0x0804cc9e      call sym.imp.__stack_chk_fail                          ; void __stack_chk_fail(void)\n", 
  "0x0804cca3": "; CODE XREF from sym.te_compile (0x804cc9c)\n0x0804cca3      leave\n0x0804cca4      ret\n", 
  "0x0804cb6d": "; CODE XREF from sym.te_compile (0x804cb5c)\n0x0804cb6d      mov eax, dword [var_3ch]\n0x0804cb70      lea edx, [eax + 0x7c]                                  ; '|' ; 124\n0x0804cb73      mov eax, dword [var_40h]\n0x0804cb76      mov eax, dword [eax]\n0x0804cb78      mov dword [edx], eax\n", 
  "0x0804c911": "; CODE XREF from sym.te_compile (0x804c8c7)\n0x0804c911      mov eax, dword [var_24h]\n0x0804c914      cmp eax, 0x1a                                          ; 26\n0x0804c917      je 0x804cb84\n", 
  "0x0804c953": "; CODE XREF from sym.te_compile (0x804c92a)\n0x0804c953      mov eax, dword [var_3ch]\n0x0804c956      add eax, 0x20\n0x0804c959      mov edx, dword [eax]\n0x0804c95b      mov eax, dword [var_3ch]\n0x0804c95e      add eax, 0x20\n0x0804c961      mov eax, dword [eax]\n0x0804c963      cmp eax, 0x4466616c                                    ; 'lafD'\n0x0804c968      sete al\n0x0804c96b      movzx eax, al\n0x0804c96e      imul eax, edx\n0x0804c971      shl eax, 4\n0x0804c974      mov edx, eax\n0x0804c976      mov eax, dword [var_30h]\n0x0804c979      add eax, edx\n0x0804c97b      sub esp, 8\n0x0804c97e      push eax\n0x0804c97f      push dword [var_3ch]\n0x0804c982      call sym.te_free\n0x0804c987      add esp, 0x10\n0x0804c98a      cmp dword [var_40h], 0\n0x0804c98e      je 0x804c9d8\n", 
  "0x0804c8c9": "0x0804c8c9      mov eax, dword [var_2ch]\n0x0804c8cc      mov edx, dword [eax]\n0x0804c8ce      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c8d3      sub esp, 8\n0x0804c8d6      push 0xd85                                             ; 3461\n0x0804c8db      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c8e0      push edx\n0x0804c8e1      push 0x1e                                              ; 30\n0x0804c8e3      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804c8e8      push eax                                               ; FILE *stream\n0x0804c8e9      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804c8ee      add esp, 0x20\n0x0804c8f1      test eax, eax\n0x0804c8f3      je 0x804c904\n", 
  "0x0804cafb": "0x0804cafb      sub esp, 0xc\n0x0804cafe      push 0                                                 ; FILE *stream\n0x0804cb00      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804cb05      add esp, 0x10\n0x0804cb08      test eax, eax\n", 
  "0x0804c9e2": "0x0804c9e2      cmp dword [var_40h], 0\n0x0804c9e6      je 0x804ca30\n", 
  "0x0804cb2c": "; CODE XREFS from sym.te_compile (0x804c9dc, 0x804cb21)\n0x0804cb2c      cmp dword [var_40h], 0\n0x0804cb30      je 0x804cb7a\n", 
  "0x0804c990": "0x0804c990      mov eax, dword [var_40h]\n0x0804c993      mov edx, dword [eax]\n0x0804c995      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c99a      sub esp, 8\n0x0804c99d      push 0xd8a                                             ; 3466\n0x0804c9a2      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c9a7      push edx\n0x0804c9a8      push 0x10                                              ; 16\n0x0804c9aa      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804c9af      push eax                                               ; FILE *stream\n0x0804c9b0      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804c9b5      add esp, 0x20\n0x0804c9b8      test eax, eax\n0x0804c9ba      je 0x804c9cb\n", 
  "0x0804c9e8": "0x0804c9e8      mov eax, dword [var_40h]\n0x0804c9eb      mov edx, dword [eax]\n0x0804c9ed      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c9f2      sub esp, 8\n0x0804c9f5      push 0xd8e                                             ; 3470\n0x0804c9fa      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c9ff      push edx\n0x0804ca00      push 0x1b                                              ; 27\n0x0804ca02      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804ca07      push eax                                               ; FILE *stream\n0x0804ca08      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804ca0d      add esp, 0x20\n0x0804ca10      test eax, eax\n0x0804ca12      je 0x804ca23\n", 
  "0x0804cb0a": "; CODE XREF from sym.te_compile (0x804caf9)\n0x0804cb0a      mov eax, dword [var_3ch]\n0x0804cb0d      lea edx, [eax + 0xb4]                                  ; 180\n0x0804cb13      mov eax, dword [var_28h]\n0x0804cb16      mov eax, dword [eax]\n0x0804cb18      mov dword [edx], eax\n", 
  "0x0804cc8f": "; CODE XREF from sym.te_compile (0x804cbf5)\n0x0804cc8f      mov eax, dword [var_30h]\n", 
  "0x0804c7c3": "0x0804c7c3      sub esp, 0xc\n0x0804c7c6      push 0                                                 ; FILE *stream\n0x0804c7c8      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804c7cd      add esp, 0x10\n0x0804c7d0      test eax, eax\n", 
  "0x0804ca30": "; CODE XREF from sym.te_compile (0x804c9e6)\n0x0804ca30      mov eax, dword [var_3ch]\n0x0804ca33      add eax, 0x28                                          ; '('\n0x0804ca36      mov edx, dword [eax]\n0x0804ca38      mov eax, dword [var_3ch]\n0x0804ca3b      add eax, 0x2c                                          ; ','\n0x0804ca3e      mov eax, dword [eax]\n0x0804ca40      add edx, eax\n0x0804ca42      mov eax, dword [var_3ch]\n0x0804ca45      add eax, 0x30                                          ; '0'\n0x0804ca48      mov eax, dword [eax]\n0x0804ca4a      imul eax, edx\n0x0804ca4d      cmp eax, 0xed12e20e\n0x0804ca52      jne 0x804ca7b\n", 
  "0x0804ca14": "0x0804ca14      sub esp, 0xc\n0x0804ca17      push 0                                                 ; FILE *stream\n0x0804ca19      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804ca1e      add esp, 0x10\n0x0804ca21      test eax, eax\n", 
  "0x0804c81b": "; CODE XREF from sym.te_compile (0x804c7f2)\n0x0804c81b      mov eax, dword [var_3ch]\n0x0804c81e      add eax, 0x3c                                          ; '<'\n0x0804c821      mov edx, dword [eax]\n0x0804c823      mov eax, dword [var_3ch]\n0x0804c826      add eax, 0x3c                                          ; '<'\n0x0804c829      mov eax, dword [eax]\n0x0804c82b      cmp eax, 0x70796863                                    ; 'chyp'\n0x0804c830      sete al\n0x0804c833      movzx eax, al\n0x0804c836      imul eax, edx\n0x0804c839      shl eax, 5\n0x0804c83c      mov edx, eax\n0x0804c83e      lea eax, [var_2ch]\n0x0804c841      add eax, edx\n0x0804c843      sub esp, 8\n0x0804c846      push eax\n0x0804c847      push dword [var_3ch]\n0x0804c84a      call sym.next_token\n0x0804c84f      add esp, 0x10\n0x0804c852      mov eax, dword [var_3ch]\n0x0804c855      add eax, 0x40                                          ; '@'\n0x0804c858      mov eax, dword [eax]\n0x0804c85a      cmp eax, 0x6b797650                                    ; 'Pvyk'\n0x0804c85f      jne 0x804c888\n", 
  "0x0804c7f4": "0x0804c7f4      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c7f9      sub esp, 0xc\n0x0804c7fc      push 0xd81                                             ; 3457\n0x0804c801      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c806      push 0x2741                                            ; 'A''\n0x0804c80b      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x0804c810      push eax                                               ; FILE *stream\n0x0804c811      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804c816      add esp, 0x20\n0x0804c819      test eax, eax\n", 
  "0x0804c91d": "0x0804c91d      mov eax, dword [var_3ch]\n0x0804c920      add eax, 0x20\n0x0804c923      mov eax, dword [eax]\n0x0804c925      cmp eax, 0x4466616c                                    ; 'lafD'\n0x0804c92a      jne 0x804c953\n", 
  "0x0804c756": "(fcn) sym.te_compile 1359\n  sym.te_compile (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h);\n; var uint32_t var_48h @ ebp-0x48\n; var int32_t var_44h @ ebp-0x44\n; var uint32_t var_40h @ ebp-0x40\n; var int32_t var_3ch @ ebp-0x3c\n; var int32_t var_30h @ ebp-0x30\n; var int32_t var_2ch @ ebp-0x2c\n; var int32_t var_28h @ ebp-0x28\n; var int32_t var_24h @ ebp-0x24\n; var int32_t var_14h @ ebp-0x14\n; var int32_t var_10h @ ebp-0x10\n; var int32_t canary @ ebp-0xc\n; arg int32_t arg_8h @ ebp+0x8\n; arg int32_t arg_ch @ ebp+0xc\n; arg int32_t arg_10h @ ebp+0x10\n; arg int32_t arg_14h @ ebp+0x14\n; arg int32_t arg_18h @ ebp+0x18\n; CALL XREF from main (0x80493ac)\n; CALL XREF from sym.te_interp (0x804ccbb)\n0x0804c756      push ebp\n0x0804c757      mov ebp, esp\n0x0804c759      sub esp, 0x48                                          ; 'H'\n0x0804c75c      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804c75f      mov dword [var_3ch], eax\n0x0804c762      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804c765      mov dword [var_40h], eax\n0x0804c768      mov eax, dword [arg_10h]                               ; [0x10:4]=-1 ; 16\n0x0804c76b      mov dword [var_44h], eax\n0x0804c76e      mov eax, dword [arg_18h]                               ; [0x18:4]=-1 ; 24\n0x0804c771      mov dword [var_48h], eax\n0x0804c774      mov eax, dword gs:[0x14]                               ; [0x14:4]=-1 ; 20\n0x0804c77a      mov dword [canary], eax\n0x0804c77d      xor eax, eax\n0x0804c77f      mov eax, dword [var_40h]\n0x0804c782      mov dword [var_28h], eax\n0x0804c785      mov eax, dword [var_28h]\n0x0804c788      mov dword [var_2ch], eax\n0x0804c78b      mov eax, dword [var_44h]\n0x0804c78e      mov dword [var_14h], eax\n0x0804c791      cmp dword [var_40h], 0\n0x0804c795      je 0x804c7df\n", 
  "0x0804c7df": "; CODE XREF from sym.te_compile (0x804c795)\n0x0804c7df      mov eax, dword [arg_14h]                               ; [0x14:4]=-1 ; 20\n0x0804c7e2      mov dword [var_10h], eax\n0x0804c7e5      mov eax, dword [var_3ch]\n0x0804c7e8      add eax, 0x3c                                          ; '<'\n0x0804c7eb      mov eax, dword [eax]\n0x0804c7ed      cmp eax, 0x70796863                                    ; 'chyp'\n0x0804c7f2      jne 0x804c81b\n", 
  "0x0804c9bc": "0x0804c9bc      sub esp, 0xc\n0x0804c9bf      push 0                                                 ; FILE *stream\n0x0804c9c1      call sym.imp.fflush                                    ; int fflush(FILE *stream)\n0x0804c9c6      add esp, 0x10\n0x0804c9c9      test eax, eax\n", 
  "0x0804c797": "0x0804c797      mov eax, dword [var_40h]\n0x0804c79a      mov edx, dword [eax]\n0x0804c79c      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x0804c7a1      sub esp, 8\n0x0804c7a4      push 0xd7d                                             ; 3453\n0x0804c7a9      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x0804c7ae      push edx\n0x0804c7af      push 3                                                 ; 3\n0x0804c7b1      push str.DFLOG:_d__d:__s:_d                            ; 0x804d230 ; \\\\\\nDFLOG:%d=%d: %s:%d\\\\n\\ ; const char *format\n0x0804c7b6      push eax                                               ; FILE *stream\n0x0804c7b7      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x0804c7bc      add esp, 0x20\n0x0804c7bf      test eax, eax\n0x0804c7c1      je 0x804c7d2\n", 
  "0x0804c904": "; CODE XREF from sym.te_compile (0x804c8f3)\n0x0804c904      mov eax, dword [var_3ch]\n0x0804c907      lea edx, [eax + 0x78]                                  ; 'x' ; 120\n0x0804c90a      mov eax, dword [var_2ch]\n0x0804c90d      mov eax, dword [eax]\n0x0804c90f      mov dword [edx], eax\n"
}