{
  "0x0804a35b": "(fcn) sym.divide 38\n  sym.divide (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h);\n; var int32_t var_10h @ ebp-0x10\n; var int32_t var_ch @ ebp-0xc\n; var int32_t var_8h @ ebp-0x8\n; var int32_t var_4h @ ebp-0x4\n; arg int32_t arg_8h @ ebp+0x8\n; arg int32_t arg_ch @ ebp+0xc\n; arg int32_t arg_10h @ ebp+0x10\n; arg int32_t arg_14h @ ebp+0x14\n; DATA XREF from sym.next_token (0x804a88b)\n; DATA XREF from sym.term (0x804b884)\n0x0804a35b      push ebp\n0x0804a35c      mov ebp, esp\n0x0804a35e      sub esp, 0x10\n0x0804a361      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x0804a364      mov dword [var_8h], eax\n0x0804a367      mov eax, dword [arg_ch]                                ; [0xc:4]=-1 ; 12\n0x0804a36a      mov dword [var_4h], eax\n0x0804a36d      mov eax, dword [arg_10h]                               ; [0x10:4]=-1 ; 16\n0x0804a370      mov dword [var_10h], eax\n0x0804a373      mov eax, dword [arg_14h]                               ; [0x14:4]=-1 ; 20\n0x0804a376      mov dword [var_ch], eax\n0x0804a379      fld qword [var_8h]\n0x0804a37c      fdiv qword [var_10h]\n0x0804a37f      leave\n0x0804a380      ret\n"
}