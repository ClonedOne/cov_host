{
  "0x0804b912": "| 0x0804b912      leave\n\\\\ 0x0804b913      ret\n", 
  "0x0804b79f": "| 0x0804b79f      mov eax, dword [local_2ch]\n| 0x0804b7a2      lea edx, dword [eax + 0xa8]\n| 0x0804b7a8      mov eax, dword [local_30h]\n| 0x0804b7ab      mov eax, dword [eax + 4]\n| 0x0804b7ae      mov eax, dword [eax]\n| 0x0804b7b0      mov dword [edx], eax\n", 
  "0x0804b86d": "| 0x0804b86d      mov eax, dword [local_30h]\n| 0x0804b870      mov eax, dword [eax + 0xc]\n| 0x0804b873      cmp eax, sym.mul\n| 0x0804b878      je 0x804b751\n", 
  "0x0804b90d": "| 0x0804b90d      call sym.imp.__stack_chk_fail\n", 
  "0x0804b8a6": "| 0x0804b8a6      mov eax, dword [local_30h]\n| 0x0804b8a9      mov eax, dword [eax + 4]\n| 0x0804b8ac      test eax, eax\n| 0x0804b8ae      je 0x804b8fe\n", 
  "0x0804b8a0": "| 0x0804b8a0      cmp dword [local_30h], 0\n| 0x0804b8a4      je 0x804b8fe\n", 
  "0x0804b761": "| 0x0804b761      mov eax, dword [local_30h]\n| 0x0804b764      mov eax, dword [eax + 4]\n| 0x0804b767      mov edx, dword [eax]\n| 0x0804b769      mov eax, dword [obj.stderr]\n| 0x0804b76e      sub esp, 8\n| 0x0804b771      push 0xcf7\n| 0x0804b776      push str.tinyexpr_pre.c\n| 0x0804b77b      push edx\n| 0x0804b77c      push 0x2a\n| 0x0804b77e      push str.DFLOG:_d__d:__s:_d\n| 0x0804b783      push eax\n| 0x0804b784      call sym.imp.fprintf\n| 0x0804b789      add esp, 0x20\n| 0x0804b78c      test eax, eax\n| 0x0804b78e      je 0x804b79f\n", 
  "0x0804b8df": "| 0x0804b8df      sub esp, 0xc\n| 0x0804b8e2      push 0\n| 0x0804b8e4      call sym.imp.fflush\n| 0x0804b8e9      add esp, 0x10\n| 0x0804b8ec      test eax, eax\n", 
  "0x0804b8fe": "| 0x0804b8fe      mov eax, dword [local_1ch]\n| 0x0804b901      mov ecx, dword [local_ch]\n| 0x0804b904      xor ecx, dword gs:[0x14]\n| 0x0804b90b      je 0x804b912\n", 
  "0x0804b7b2": "| 0x0804b7b2      mov eax, dword [local_30h]\n| 0x0804b7b5      mov eax, dword [eax + 0xc]\n| 0x0804b7b8      mov dword [local_18h], eax\n| 0x0804b7bb      mov eax, dword [local_2ch]\n| 0x0804b7be      add eax, 0x68\n| 0x0804b7c1      mov eax, dword [eax]\n| 0x0804b7c3      cmp eax, 0x57614873\n| 0x0804b7c8      jne 0x804b7f1\n", 
  "0x0804b7f1": "| 0x0804b7f1      mov eax, dword [local_2ch]\n| 0x0804b7f4      add eax, 0x68\n| 0x0804b7f7      mov edx, dword [eax]\n| 0x0804b7f9      mov eax, dword [local_2ch]\n| 0x0804b7fc      add eax, 0x68\n| 0x0804b7ff      mov eax, dword [eax]\n| 0x0804b801      cmp eax, 0x57614873\n| 0x0804b806      sete al\n| 0x0804b809      movzx eax, al\n| 0x0804b80c      imul eax, edx\n| 0x0804b80f      shl eax, 5\n| 0x0804b812      mov edx, eax\n| 0x0804b814      mov eax, dword [local_30h]\n| 0x0804b817      add eax, edx\n| 0x0804b819      sub esp, 8\n| 0x0804b81c      push eax\n| 0x0804b81d      push dword [local_2ch]\n| 0x0804b820      call sym.next_token\n| 0x0804b825      add esp, 0x10\n| 0x0804b828      mov eax, dword [local_1ch]\n| 0x0804b82b      mov dword [local_14h], eax\n| 0x0804b82e      sub esp, 8\n| 0x0804b831      push dword [local_30h]\n| 0x0804b834      push dword [local_2ch]\n| 0x0804b837      call sym.factor\n| 0x0804b83c      add esp, 0x10\n| 0x0804b83f      mov dword [local_10h], eax\n| 0x0804b842      sub esp, 4\n| 0x0804b845      lea eax, dword [local_14h]\n| 0x0804b848      push eax\n| 0x0804b849      push 0x2a\n| 0x0804b84b      push dword [local_2ch]\n| 0x0804b84e      call sym.new_expr\n| 0x0804b853      add esp, 0x10\n| 0x0804b856      mov dword [local_1ch], eax\n| 0x0804b859      mov eax, dword [local_1ch]\n| 0x0804b85c      mov edx, dword [local_18h]\n| 0x0804b85f      mov dword [eax + 4], edx\n", 
  "0x0804b87e": "| 0x0804b87e      mov eax, dword [local_30h]\n| 0x0804b881      mov eax, dword [eax + 0xc]\n| 0x0804b884      cmp eax, sym.divide\n| 0x0804b889      je 0x804b751\n", 
  "0x0804b790": "| 0x0804b790      sub esp, 0xc\n| 0x0804b793      push 0\n| 0x0804b795      call sym.imp.fflush\n| 0x0804b79a      add esp, 0x10\n| 0x0804b79d      test eax, eax\n", 
  "0x0804b7ca": "| 0x0804b7ca      mov eax, dword [obj.stderr]\n| 0x0804b7cf      sub esp, 0xc\n| 0x0804b7d2      push 0xcfa\n| 0x0804b7d7      push str.tinyexpr_pre.c\n| 0x0804b7dc      push 0x6e29\n| 0x0804b7e1      push str.LAVALOG:__d:__s:_d\n| 0x0804b7e6      push eax\n| 0x0804b7e7      call sym.imp.fprintf\n| 0x0804b7ec      add esp, 0x20\n| 0x0804b7ef      test eax, eax\n", 
  "0x0804b862": "| 0x0804b862      mov eax, dword [local_30h]\n| 0x0804b865      mov eax, dword [eax + 8]\n| 0x0804b868      cmp eax, 0x20\n| 0x0804b86b      jne 0x804b8a0\n", 
  "0x0804b6eb": "| 0x0804b6eb      mov eax, dword [obj.stderr]\n| 0x0804b6f0      sub esp, 0xc\n| 0x0804b6f3      push 0xcf3\n| 0x0804b6f8      push str.tinyexpr_pre.c\n| 0x0804b6fd      push 0x51a\n| 0x0804b702      push str.LAVALOG:__d:__s:_d\n| 0x0804b707      push eax\n| 0x0804b708      call sym.imp.fprintf\n| 0x0804b70d      add esp, 0x20\n| 0x0804b710      test eax, eax\n", 
  "0x0804b8b0": "| 0x0804b8b0      mov eax, dword [local_30h]\n| 0x0804b8b3      mov eax, dword [eax + 4]\n| 0x0804b8b6      mov edx, dword [eax]\n| 0x0804b8b8      mov eax, dword [obj.stderr]\n| 0x0804b8bd      sub esp, 8\n| 0x0804b8c0      push 0xd00\n| 0x0804b8c5      push str.tinyexpr_pre.c\n| 0x0804b8ca      push edx\n| 0x0804b8cb      push 5\n| 0x0804b8cd      push str.DFLOG:_d__d:__s:_d\n| 0x0804b8d2      push eax\n| 0x0804b8d3      call sym.imp.fprintf\n| 0x0804b8d8      add esp, 0x20\n| 0x0804b8db      test eax, eax\n| 0x0804b8dd      je 0x804b8ee\n", 
  "0x0804b88f": "| 0x0804b88f      mov eax, dword [local_30h]\n| 0x0804b892      mov eax, dword [eax + 0xc]\n| 0x0804b895      cmp eax, sym.imp.fmod\n| 0x0804b89a      je 0x804b751\n", 
  "0x0804b712": "| 0x0804b712      mov eax, dword [local_2ch]\n| 0x0804b715      add eax, 0xc\n| 0x0804b718      mov edx, dword [eax]\n| 0x0804b71a      mov eax, dword [local_2ch]\n| 0x0804b71d      add eax, 0xc\n| 0x0804b720      mov eax, dword [eax]\n| 0x0804b722      cmp eax, 0x704f5358\n| 0x0804b727      sete al\n| 0x0804b72a      movzx eax, al\n| 0x0804b72d      imul eax, edx\n| 0x0804b730      shl eax, 5\n| 0x0804b733      mov edx, eax\n| 0x0804b735      mov eax, dword [local_30h]\n| 0x0804b738      add eax, edx\n| 0x0804b73a      sub esp, 8\n| 0x0804b73d      push eax\n| 0x0804b73e      push dword [local_2ch]\n| 0x0804b741      call sym.factor\n| 0x0804b746      add esp, 0x10\n| 0x0804b749      mov dword [local_1ch], eax\n| 0x0804b74c      jmp 0x804b862\n", 
  "0x0804b6bf": "/ (fcn) sym.term 597\n|   sym.term (int arg_8h, int arg_ch);\n| ; var int local_30h @ ebp-0x30\n| ; var int local_2ch @ ebp-0x2c\n| ; var int local_1ch @ ebp-0x1c\n| ; var int local_18h @ ebp-0x18\n| ; var int local_14h @ ebp-0x14\n| ; var int local_10h @ ebp-0x10\n| ; var int local_ch @ ebp-0xc\n| ; arg int arg_8h @ ebp+0x8\n| ; arg int arg_ch @ ebp+0xc\n| 0x0804b6bf      push ebp\n| 0x0804b6c0      mov ebp, esp\n| 0x0804b6c2      sub esp, 0x38\n| 0x0804b6c5      mov eax, dword [arg_8h]\n| 0x0804b6c8      mov dword [local_2ch], eax\n| 0x0804b6cb      mov eax, dword [arg_ch]\n| 0x0804b6ce      mov dword [local_30h], eax\n| 0x0804b6d1      mov eax, dword gs:[0x14]\n| 0x0804b6d7      mov dword [local_ch], eax\n| 0x0804b6da      xor eax, eax\n| 0x0804b6dc      mov eax, dword [local_2ch]\n| 0x0804b6df      add eax, 0xc\n| 0x0804b6e2      mov eax, dword [eax]\n| 0x0804b6e4      cmp eax, 0x704f5358\n| 0x0804b6e9      jne 0x804b712\n", 
  "0x0804b8ee": "| 0x0804b8ee      mov eax, dword [local_2ch]\n| 0x0804b8f1      lea edx, dword [eax + 0x14]\n| 0x0804b8f4      mov eax, dword [local_30h]\n| 0x0804b8f7      mov eax, dword [eax + 4]\n| 0x0804b8fa      mov eax, dword [eax]\n| 0x0804b8fc      mov dword [edx], eax\n", 
  "0x0804b757": "| 0x0804b757      mov eax, dword [local_30h]\n| 0x0804b75a      mov eax, dword [eax + 4]\n| 0x0804b75d      test eax, eax\n| 0x0804b75f      je 0x804b7b2\n", 
  "0x0804b751": "| 0x0804b751      cmp dword [local_30h], 0\n| 0x0804b755      je 0x804b7b2\n"
}