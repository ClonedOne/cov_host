{
  "0x08049d78": "0x08049d78      mov eax, dword [obj.stderr]                            ; obj.stderr__GLIBC_2.0 ; [0x804f0a8:4]=0\n0x08049d7d      sub esp, 0xc\n0x08049d80      push 0xb97                                             ; 2967\n0x08049d85      push str.tinyexpr_pre.c                                ; 0x804cfc0 ; \\tinyexpr-pre.c\\\n0x08049d8a      push 0x1a15\n0x08049d8f      push str.LAVALOG:__d:__s:_d                            ; 0x804cfcf ; \\\\\\nLAVALOG: %d: %s:%d\\\\n\\ ; const char *format\n0x08049d94      push eax                                               ; FILE *stream\n0x08049d95      call sym.imp.fprintf                                   ; int fprintf(FILE *stream, const char *format,   ...)\n0x08049d9a      add esp, 0x20\n0x08049d9d      test eax, eax\n", 
  "0x08049de6": "; CODE XREF from sym.te_free (0x8049d67)\n0x08049de6      nop\n", 
  "0x08049d5d": "(fcn) sym.te_free 140\n  sym.te_free (char *arg_8h, uint32_t ptr);\n; arg char *arg_8h @ ebp+0x8\n; arg uint32_t ptr @ ebp+0xc\n; XREFS: CALL 0x080498fc  CALL 0x08049cd2  CALL 0x08049ce7  CALL 0x08049cfc  \n; XREFS: CALL 0x08049d11  CALL 0x08049d26  CALL 0x08049d3b  CALL 0x08049d50  \n; XREFS: CALL 0x0804c982  CALL 0x0804cce9  \n0x08049d5d      push ebp\n0x08049d5e      mov ebp, esp\n0x08049d60      sub esp, 8\n0x08049d63      cmp dword [ptr], 0                                     ; [0xc:4]=-1 ; 0\n0x08049d67      je 0x8049de6\n", 
  "0x08049d69": "0x08049d69      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x08049d6c      add eax, 0x24                                          ; '$'\n0x08049d6f      mov eax, dword [eax]\n0x08049d71      cmp eax, 0x40785841                                    ; 'AXx@'\n0x08049d76      jne 0x8049d9f\n", 
  "0x08049de7": "; CODE XREF from sym.te_free (0x8049de4)\n0x08049de7      leave\n0x08049de8      ret\n", 
  "0x08049d9f": "; CODE XREF from sym.te_free (0x8049d76)\n0x08049d9f      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x08049da2      add eax, 0x24                                          ; '$'\n0x08049da5      mov edx, dword [eax]\n0x08049da7      mov eax, dword [arg_8h]                                ; [0x8:4]=-1 ; 8\n0x08049daa      add eax, 0x24                                          ; '$'\n0x08049dad      mov eax, dword [eax]\n0x08049daf      cmp eax, 0x40785841                                    ; 'AXx@'\n0x08049db4      sete al\n0x08049db7      movzx eax, al\n0x08049dba      imul eax, edx\n0x08049dbd      shl eax, 4\n0x08049dc0      mov edx, eax\n0x08049dc2      mov eax, dword [ptr]                                   ; [0xc:4]=-1 ; 12\n0x08049dc5      add eax, edx\n0x08049dc7      sub esp, 8\n0x08049dca      push eax\n0x08049dcb      push dword [arg_8h]\n0x08049dce      call sym.te_free_parameters\n0x08049dd3      add esp, 0x10\n0x08049dd6      sub esp, 0xc\n0x08049dd9      push dword [ptr]                                       ; void *ptr\n0x08049ddc      call sym.imp.free                                      ; void free(void *ptr)\n0x08049de1      add esp, 0x10\n0x08049de4      jmp 0x8049de7\n"
}