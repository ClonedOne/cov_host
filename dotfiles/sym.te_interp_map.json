{
  "0x0804cccc": "0x0804cccc      sub esp, 8\n0x0804cccf      push dword [var_14h]\n0x0804ccd2      push dword [arg_8h]\n0x0804ccd5      call sym.te_eval\n0x0804ccda      add esp, 0x10\n0x0804ccdd      fstp qword [ebp - 0x10]\n0x0804cce0      sub esp, 8\n0x0804cce3      push dword [var_14h]\n0x0804cce6      push dword [arg_8h]\n0x0804cce9      call sym.te_free\n0x0804ccee      add esp, 0x10\n0x0804ccf1      jmp 0x804ccfc\n", 
  "0x0804ccf3": "; CODE XREF from sym.te_interp (0x804ccca)\n0x0804ccf3      fld qword [0x804d530]\n0x0804ccf9      fstp qword [ebp - 0x10]\n", 
  "0x0804cca5": "(fcn) sym.te_interp 92\n  sym.te_interp (int32_t arg_8h, int32_t arg_ch, int32_t arg_10h);\n; var uint32_t var_14h @ ebp-0x14\n; arg int32_t arg_8h @ ebp+0x8\n; arg int32_t arg_ch @ ebp+0xc\n; arg int32_t arg_10h @ ebp+0x10\n0x0804cca5      push ebp\n0x0804cca6      mov ebp, esp\n0x0804cca8      sub esp, 0x18\n0x0804ccab      sub esp, 0xc\n0x0804ccae      push dword [arg_10h]\n0x0804ccb1      push 0\n0x0804ccb3      push 0\n0x0804ccb5      push dword [arg_ch]\n0x0804ccb8      push dword [arg_8h]\n0x0804ccbb      call sym.te_compile\n0x0804ccc0      add esp, 0x20\n0x0804ccc3      mov dword [var_14h], eax\n0x0804ccc6      cmp dword [var_14h], 0\n0x0804ccca      je 0x804ccf3\n", 
  "0x0804ccfc": "; CODE XREF from sym.te_interp (0x804ccf1)\n0x0804ccfc      fld qword [ebp - 0x10]\n0x0804ccff      leave\n0x0804cd00      ret\n"
}