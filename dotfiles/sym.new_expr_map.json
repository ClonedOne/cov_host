{
  "0x08049b3e": "/ (fcn) sym.new_expr 346\n|   sym.new_expr (int arg_8h, int arg_ch, int arg_10h);\n| ; var int local_18h @ ebp-0x18\n| ; var int local_14h @ ebp-0x14\n| ; var int local_10h @ ebp-0x10\n| ; var int local_ch @ ebp-0xc\n| ; arg int arg_8h @ ebp+0x8\n| ; arg int arg_ch @ ebp+0xc\n| ; arg int arg_10h @ ebp+0x10\n| 0x08049b3e      push ebp\n| 0x08049b3f      mov ebp, esp\n| 0x08049b41      sub esp, 0x18\n| 0x08049b44      mov eax, dword [arg_ch]\n| 0x08049b47      and eax, 0x18\n| 0x08049b4a      test eax, eax\n| 0x08049b4c      je 0x8049b56\n", 
  "0x08049b4e": "| 0x08049b4e      mov eax, dword [arg_ch]\n| 0x08049b51      and eax, 7\n| 0x08049b54      jmp 0x8049b5b\n", 
  "0x08049c0a": "| 0x08049c0a      cmp dword [arg_10h], 0\n| 0x08049c0e      je 0x8049c81\n", 
  "0x08049c1f": "| 0x08049c1f      mov eax, dword [obj.stderr]\n| 0x08049c24      sub esp, 0xc\n| 0x08049c27      push 0xb7f\n| 0x08049c2c      push str.tinyexpr_pre.c\n| 0x08049c31      push 0x65ec\n| 0x08049c36      push str.LAVALOG:__d:__s:_d\n| 0x08049c3b      push eax\n| 0x08049c3c      call sym.imp.fprintf\n| 0x08049c41      add esp, 0x20\n| 0x08049c44      test eax, eax\n", 
  "0x08049b5b": "| 0x08049b5b      mov dword [local_18h], eax\n| 0x08049b5e      mov eax, dword [local_18h]\n| 0x08049b61      shl eax, 2\n| 0x08049b64      mov dword [local_14h], eax\n| 0x08049b67      mov eax, dword [arg_ch]\n| 0x08049b6a      and eax, 0x10\n| 0x08049b6d      test eax, eax\n| 0x08049b6f      je 0x8049b78\n", 
  "0x08049ba9": "| 0x08049ba9      mov eax, dword [obj.stderr]\n| 0x08049bae      sub esp, 0xc\n| 0x08049bb1      push 0xb7d\n| 0x08049bb6      push str.tinyexpr_pre.c\n| 0x08049bbb      push 0x7a7\n| 0x08049bc0      push str.LAVALOG:__d:__s:_d\n| 0x08049bc5      push eax\n| 0x08049bc6      call sym.imp.fprintf\n| 0x08049bcb      add esp, 0x20\n| 0x08049bce      test eax, eax\n", 
  "0x08049b78": "| 0x08049b78      mov edx, 0\n", 
  "0x08049bd0": "| 0x08049bd0      mov eax, dword [arg_8h]\n| 0x08049bd3      add eax, 0x10\n| 0x08049bd6      mov edx, dword [eax]\n| 0x08049bd8      mov eax, dword [arg_8h]\n| 0x08049bdb      add eax, 0x10\n| 0x08049bde      mov eax, dword [eax]\n| 0x08049be0      cmp eax, 0x76744f52\n| 0x08049be5      sete al\n| 0x08049be8      movzx eax, al\n| 0x08049beb      imul edx, eax\n| 0x08049bee      mov eax, dword [local_10h]\n| 0x08049bf1      add eax, edx\n| 0x08049bf3      sub esp, 4\n| 0x08049bf6      push eax\n| 0x08049bf7      push 0\n| 0x08049bf9      push dword [local_ch]\n| 0x08049bfc      call sym.imp.memset\n| 0x08049c01      add esp, 0x10\n| 0x08049c04      cmp dword [local_18h], 0\n| 0x08049c08      je 0x8049c81\n", 
  "0x08049c81": "| 0x08049c81      mov eax, dword [local_ch]\n| 0x08049c84      mov edx, dword [arg_ch]\n| 0x08049c87      mov dword [eax], edx\n| 0x08049c89      mov eax, dword [local_ch]\n| 0x08049c8c      mov dword [eax + 4], 0\n| 0x08049c93      mov eax, dword [local_ch]\n| 0x08049c96      leave\n\\\\ 0x08049c97      ret\n", 
  "0x08049b7d": "| 0x08049b7d      mov eax, dword [local_14h]\n| 0x08049b80      add eax, edx\n| 0x08049b82      add eax, 0xc\n| 0x08049b85      mov dword [local_10h], eax\n| 0x08049b88      mov eax, dword [local_10h]\n| 0x08049b8b      sub esp, 0xc\n| 0x08049b8e      push eax\n| 0x08049b8f      call sym.imp.malloc\n| 0x08049b94      add esp, 0x10\n| 0x08049b97      mov dword [local_ch], eax\n| 0x08049b9a      mov eax, dword [arg_8h]\n| 0x08049b9d      add eax, 0x10\n| 0x08049ba0      mov eax, dword [eax]\n| 0x08049ba2      cmp eax, 0x76744f52\n| 0x08049ba7      jne 0x8049bd0\n", 
  "0x08049b56": "| 0x08049b56      mov eax, 0\n", 
  "0x08049b71": "| 0x08049b71      mov edx, 4\n| 0x08049b76      jmp 0x8049b7d\n", 
  "0x08049c46": "| 0x08049c46      mov eax, dword [arg_8h]\n| 0x08049c49      add eax, 0x64\n| 0x08049c4c      mov edx, dword [eax]\n| 0x08049c4e      mov eax, dword [arg_8h]\n| 0x08049c51      add eax, 0x64\n| 0x08049c54      mov eax, dword [eax]\n| 0x08049c56      cmp eax, 0x48716969\n| 0x08049c5b      sete al\n| 0x08049c5e      movzx eax, al\n| 0x08049c61      imul edx, eax\n| 0x08049c64      mov eax, dword [local_14h]\n| 0x08049c67      add eax, edx\n| 0x08049c69      mov edx, eax\n| 0x08049c6b      mov eax, dword [local_ch]\n| 0x08049c6e      add eax, 0xc\n| 0x08049c71      sub esp, 4\n| 0x08049c74      push edx\n| 0x08049c75      push dword [arg_10h]\n| 0x08049c78      push eax\n| 0x08049c79      call sym.imp.memcpy\n| 0x08049c7e      add esp, 0x10\n", 
  "0x08049c10": "| 0x08049c10      mov eax, dword [arg_8h]\n| 0x08049c13      add eax, 0x64\n| 0x08049c16      mov eax, dword [eax]\n| 0x08049c18      cmp eax, 0x48716969\n| 0x08049c1d      jne 0x8049c46\n"
}